{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,S,E,S,E,S,E,S,E,S,E,S,E,S,E,S,E,S,E,Q,G,E,Q,S,C,C,C,E,E,Q,G,E,Q,S,C,C,C,E,I,E,E,S,E,E,S,E,S,E,S,E,S,I,E,E,QGkKO,OAAM,UAAc,EAAA,YAAW,CAcpC,yBAAyB,CAAY,CAAE,CAAuB,CAAE,CAAuB,CAAQ,CAG7F,KAAK,CAAC,yBAAyB,EAAM,EAAU,EACjD,CAEA,iBAAiB,CAAK,CAAE,CACtB,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAC3C,EAAa,GAAQ,CAAC,EAAE,CAAC,OAAS,EAExC,CAAA,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,YAAY,EACnB,CAEA,oBAAoB,CAAK,CAAE,CACzB,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAC3C,EAAW,GAAQ,CAAC,EAAE,CAAC,OAAS,GACtC,QAAQ,GAAG,CAAC,GAEZ,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,YAAY,EACnB,CAEA,cAAe,CACb,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EACnC,IAAI,CAAC,WAAW,CAAG,AAAc,KAAd,IAAI,CAAC,IAAI,EAAW,AAAkB,KAAlB,IAAI,CAAC,QAAQ,CACpD,IAAI,CAAC,YAAY,CAAG,IAAI,CAAC,WAAW,CAAG,KAAO,wDAChD,CAEA,MAAM,UAAW,CACf,GAAI,IAAI,CAAC,WAAW,CAAE,CACpB,IAAM,EAAO,CACX,MAAO,IAAI,CAAC,IAAI,CAChB,SAAU,IAAI,CAAC,QAAQ,AACzB,EACA,QAAQ,GAAG,CAAC,GAEZ,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAC,EAAE,EAAA,GAAE,CAAE,UAAU,CAAC,CAAE,CAC/C,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,YAAa,UACb,KAAM,KAAK,SAAS,CAAC,EACvB,GAGA,GAAI,EAAS,EAAE,CAAE,CACf,IAAM,EAAS,MAAM,EAAS,IAAI,GAClC,QAAQ,GAAG,CAAC,oBAAqB,GACjC,QAAQ,GAAG,CAAC,GAEZ,IAAM,EAAW,CACf,UAAW,EAAO,QAAQ,CAAC,GAAG,CAC9B,WAAY,EAAO,QAAQ,CAAC,MAAM,CAClC,MAAO,EAAO,QAAQ,CAAC,KAAK,CAC5B,KAAM,EAAO,QAAQ,CAAC,IAAI,CAC1B,QAAS,EAAO,QAAQ,CAAC,OAAO,AAClC,EAGA,aAAa,OAAO,CAAC,WAAY,KAAK,SAAS,CAAC,IAEhD,MAAM,qBAGN,WAAW,KACT,OAAO,QAAQ,CAAC,IAAI,CAAG,cACzB,EAAG,KAEC,EAAO,KAAK,EACd,QAAQ,GAAG,CAAC,aAAc,EAAO,KAAK,EACtC,aAAa,OAAO,CAAC,QAAS,EAAO,KAAK,GAE1C,QAAQ,KAAK,CAAC,sBAIlB,MAEE,QAAQ,KAAK,CAAC,gCAAiC,EAAS,UAAU,EAClE,IAAI,CAAC,YAAY,CAAG,4DAGxB,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,8BAA+B,GAC7C,IAAI,CAAC,YAAY,CAAG,wDACtB,CACF,MACE,IAAI,CAAC,YAAY,CAAG,mCAExB,CAKA,aAAc,CACZ,IAAI,CAAC,YAAY,GACb,IAAI,CAAC,WAAW,EAClB,IAAI,CAAC,QAAQ,EAEjB,CAEA,kBAAmB,CACjB,IAAI,CAAC,UAAU,CAAG,CAAC,IAAI,CAAC,UAAU,AACpC,C,Y,G,C,C,C,K,I,GArHS,IAAA,CAAA,KAAA,CAAgB,GAChB,IAAA,CAAA,QAAA,CAAmB,GACnB,IAAA,CAAA,UAAA,CAAsB,CAAA,EACtB,IAAA,CAAA,WAAA,CAAuB,CAAA,EACvB,IAAA,CAAA,YAAA,CAA8B,KAE9B,IAAA,CAAA,QAAA,CAAoB,CAAA,EAE7B,IAAA,CAAA,IAAA,CAAc,GACd,IAAA,CAAA,QAAA,CAAkB,E,CA6GpB,C,A,C,E,E,U,A,E,CAtHG,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAHU,CAAA,EAAA,SAAA,CAAA,QAAA,KAAA,G,A,C,E,E,U,A,E,CAIV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAJU,CAAA,EAAA,SAAA,CAAA,WAAA,KAAA,G,A,C,E,E,U,A,E,CAKV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IALU,CAAA,EAAA,SAAA,CAAA,aAAA,KAAA,G,A,C,E,E,U,A,E,CAMV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IANU,CAAA,EAAA,SAAA,CAAA,cAAA,KAAA,G,A,C,E,E,U,A,E,CAOV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAPU,CAAA,EAAA,SAAA,CAAA,eAAA,KAAA,G,A,C,E,E,U,A,E,CASV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IATU,CAAA,EAAA,SAAA,CAAA,WAAA,KAAA,GAAA,AAAA,CAAA,EAAA,EAAA,UAAA,AAAA,EAAA,CA3JZ,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,EAAc,CACb,KAAM,aACN,SAAU,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAC,GACT,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;;;;;;;;;;sBAWM,EAAE,AAAC,GAAU,EAAM,gBAAgB,GAAG;qBACvC,EAAE,EAAM,KAAK,CAAC;;;;;;;;sBAQb,EAAE,AAAC,GAAU,EAAM,mBAAmB,GAAG;qBAC1C,EAAE,EAAM,QAAQ,CAAC;;;;;uBAKf,EAAE,CAAC,EAAM,WAAW,CAAC;oBACxB,EAAE,IAAM,EAAM,WAAW,GAAG;;;;;;;;;uBASzB,EAAE,IAAM,EAAM,gBAAgB,GAAG;wBAChC,EAAE,EAAM,UAAU,CAAC;;;;;;;;;QASnC,EAAE,EAAM,YAAY,CAChB,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,2BAA2B,EAAE,EAAM,YAAY,CAAC,MAAM,CAAC,CAC5D,GAAG;;IAEX,CAAC,CACD,CAAC,CACH,OAAQ,CACN,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,CAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+FJ,CAAC,CACF,CACD,cAAe,CAAE,KAAM,MAAO,CAChC,GACa,CAAA,E,G,E,Q,S,C,C,C,E,E,Q,G,E,Q,S,C,C,C,E,I,E,E,S,E,E,S,E,S,E,S,E,S,I,E,E,QE6PN,OAAM,UAAoB,EAAA,YAAW,CAmB1C,yBAAyB,CAAI,CAAE,CAE7B,IAAM,EAAiB,IAAI,CAAC,UAAU,EAAE,eAAe,uBACjD,EAAe,IAAI,CAAC,UAAU,EAAE,eAAe,eAGrD,CAAA,EAAe,WAAW,CAAG,CAAC,EAAE,EAAK,QAAQ,CAAC,GAAG,EAAE,EAAK,IAAI,CAAC,SAAE,CAAC,CAChE,IAAI,CAAC,KAAK,CAAG,EAAK,QAAQ,CAC1B,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,EAGlB,AAA+B,SAA/B,EAAa,KAAK,CAAC,OAAO,EAAe,AAA+B,KAA/B,EAAa,KAAK,CAAC,OAAO,CAErE,EAAa,KAAK,CAAC,OAAO,CAAG,QAG7B,EAAa,KAAK,CAAC,OAAO,CAAG,MAEjC,CAEA,yBAAyB,CAAI,CAAE,CAE7B,IAAM,EAAiB,IAAI,CAAC,UAAU,EAAE,eAAe,uBACjD,EAAe,IAAI,CAAC,UAAU,EAAE,eAAe,eAGrD,CAAA,EAAe,WAAW,CAAG,CAAC,EAAE,EAAK,KAAK,CAAC,CAAC,CAC5C,IAAI,CAAC,KAAK,CAAG,EAAK,KAAK,CACvB,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,EAGlB,AAA+B,SAA/B,EAAa,KAAK,CAAC,OAAO,EAAe,AAA+B,KAA/B,EAAa,KAAK,CAAC,OAAO,CAErE,EAAa,KAAK,CAAC,OAAO,CAAG,QAG7B,EAAa,KAAK,CAAC,OAAO,CAAG,MAEjC,CAKA,MAAM,YAAY,CAAU,CAAkB,CAC5C,QAAQ,GAAG,CAAC,GACZ,GAAI,CAEF,IAAM,EAAW,MAAM,MAAM,EAAK,CAChC,OAAQ,MACR,QAAS,CACP,eAAgB,kBAClB,CACF,GAGA,GAAI,CAAC,EAAS,EAAE,CACd,MAAM,AAAI,MAAM,gEAIlB,IAAM,EAAO,MAAM,EAAS,IAAI,GAKhC,OAHA,QAAQ,GAAG,CAAC,0BAA2B,GAGhC,EAAK,MAAM,CAAG,EAAI,EAAO,EAAE,AAEpC,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,mCAAoC,GAC3C,EAAE,AACX,CACF,CAGA,iBAAkB,CAChB,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAE3C,EAAQ,AADK,CAAA,GAAQ,CAAC,EAAE,AAAF,EACH,KAAK,EAAI,GAE7B,EAAM,QAAQ,CAAC,MAIlB,QAAQ,GAAG,CAAC,gBACZ,IAAI,CAAC,YAAY,CAAG,CAAA,EACpB,IAAI,CAAC,KAAK,CAAG,EACb,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,IANtB,QAAQ,GAAG,CAAC,2CACZ,IAAI,CAAC,YAAY,CAAG,CAAA,EASxB,CAEA,oBAAqB,CACnB,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAE3C,EAAW,AADK,CAAA,GAAQ,CAAC,EAAE,AAAF,EACA,KAAK,EAAI,GAElC,EAAe,IAAI,CAAC,aAAa,CAAC,GAEpC,GACF,QAAQ,GAAG,CAAC,GACZ,IAAI,CAAC,eAAe,CAAG,CAAA,IAEvB,QAAQ,GAAG,CAAC,uBACZ,IAAI,CAAC,eAAe,CAAG,CAAA,EACvB,IAAI,CAAC,QAAQ,CAAG,EAChB,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,EAE/B,CAEE,cAAc,CAAgB,CAAiB,QAI7C,AAAI,EAAS,MAAM,CAHP,GAGiB,EAAS,MAAM,CAFhC,GAGD,6DAAmE,CAIzE,AADqB,0BACH,IAAI,CAAC,GAKvB,AADgB,QACH,IAAI,CAAC,GAKlB,AADa,QACH,IAAI,CAAC,GAIb,KAHI,qDALA,wDALA,8DAcb,CACA,2BAA4B,CAC1B,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAE3C,EAAe,AADQ,CAAA,GAAQ,CAAC,EAAE,AAAF,EACI,KAAK,EAAI,GAEnD,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAE,GAGvB,IAAiB,IAAI,CAAC,QAAQ,EAChC,QAAQ,GAAG,CAAC,0CACZ,IAAI,CAAC,wBAAwB,CAAG,CAAA,IAEhC,QAAQ,GAAG,CAAC,mCACZ,IAAI,CAAC,wBAAwB,CAAG,CAAA,EAChC,IAAI,CAAC,YAAY,CAAG,EAExB,CAEA,gBAAgB,CACd,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAE3C,EAAO,AADK,CAAA,GAAQ,CAAC,EAAE,AAAF,EACJ,KAAK,EAAI,EAGhC,CAAA,IAAI,CAAC,IAAI,CAAG,CACd,CACA,qBAAqB,CACnB,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAE3C,EAAY,AADK,CAAA,GAAQ,CAAC,EAAE,AAAF,EACC,KAAK,EAAI,EAE1C,CAAA,IAAI,CAAC,SAAS,CAAG,CACnB,CACA,oBAAoB,CAClB,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAE3C,EAAW,AADK,CAAA,GAAQ,CAAC,EAAE,AAAF,EACA,KAAK,EAAI,EAExC,CAAA,IAAI,CAAC,QAAQ,CAAG,CAClB,CAEA,eAAgB,CACd,IAAM,EAAsC,CAAC,SAG7C,AAAI,IAAI,CAAC,KAAK,EACZ,EAAS,KAAK,CAAG,IAAI,CAAC,KAAK,CAMzB,IAAI,CAAC,QAAQ,GACf,EAAS,QAAQ,CAAG,IAAI,CAAC,QAAQ,CAM/B,IAAI,CAAC,IAAI,GACX,EAAS,IAAI,CAAG,IAAI,CAAC,IAAI,CAMvB,IAAI,CAAC,SAAS,GAChB,EAAS,SAAS,CAAG,IAAI,CAAC,SAAS,CAMjC,IAAI,CAAC,QAAQ,GACf,EAAS,QAAQ,CAAG,IAAI,CAAC,QAAQ,CAM/B,IAAI,CAAC,KAAK,GACZ,EAAS,KAAK,CAAG,IAAI,CAAC,KAAK,CAMzB,IAAI,CAAC,KAAK,GACZ,EAAS,KAAK,CAAG,IAAI,CAAC,KAAK,CAM7B,QAAQ,GAAG,CAAC,iCAAkC,GAC9C,QAAQ,GAAG,CAAC,EAAS,KAAK,CAAE,EAAS,KAAK,EACnC,IANL,QAAQ,GAAG,CAAC,yBACL,OARP,QAAQ,GAAG,CAAC,mCACL,OARP,QAAQ,GAAG,CAAC,mCACL,OARP,QAAQ,GAAG,CAAC,2BACL,OARP,QAAQ,GAAG,CAAC,0BACL,OARP,QAAQ,GAAG,CAAC,iCACL,OARP,QAAQ,GAAG,CAAC,yBACL,KAgDX,CAEA,MAAM,UAAW,CACf,IAAM,EAAW,IAAI,CAAC,aAAa,GAEnC,GAAI,CAAC,EAAU,CACb,QAAQ,GAAG,CAAC,sDACZ,MACF,CAEA,QAAQ,GAAG,CAAC,qBAAsB,GAClC,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAC,EAAE,EAAA,GAAE,CAAE,YAAY,CAAC,CAAE,CAC/C,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,EACzB,EAEI,CAAA,EAAS,EAAE,EACI,MAAM,EAAS,IAAI,GAClC,MAAM,wCAEN,OAAO,QAAQ,CAAC,IAAI,CAAG,qBAEvB,QAAQ,KAAK,CAAC,oCAAqC,EAAS,UAAU,EACtE,MAAM,kDAEZ,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,8BAA+B,GAC7C,MAAM,2CACR,CACF,C,Y,G,C,C,C,K,I,GA3RS,IAAA,CAAA,KAAA,CAAiC,KACjC,IAAA,CAAA,OAAA,CAAmC,KAEpC,IAAA,CAAA,YAAA,CAAuB,KACvB,IAAA,CAAA,eAAA,CAA0B,KAC1B,IAAA,CAAA,gBAAA,CAA2B,KAC3B,IAAA,CAAA,wBAAA,CAAmC,KAG3C,IAAA,CAAA,KAAA,CAAgB,GAChB,IAAA,CAAA,QAAA,CAAmB,GACnB,IAAA,CAAA,YAAA,CAAuB,GACvB,IAAA,CAAA,IAAA,CAAe,GACf,IAAA,CAAA,SAAA,CAAoB,GACpB,IAAA,CAAA,QAAA,CAAmB,GACnB,IAAA,CAAA,KAAA,CAAgB,GAChB,IAAA,CAAA,KAAA,CAAgB,E,CA4QlB,C,A,C,E,E,U,A,E,CA5RG,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IADU,CAAA,EAAA,SAAA,CAAA,QAAA,KAAA,G,A,C,E,E,U,A,E,CAEV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAFU,CAAA,EAAA,SAAA,CAAA,UAAA,KAAA,G,A,C,E,E,U,A,E,CAIV,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,IAJU,CAAA,EAAA,SAAA,CAAA,eAAA,KAAA,G,A,C,E,E,U,A,E,CAKV,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,IALU,CAAA,EAAA,SAAA,CAAA,kBAAA,KAAA,G,A,C,E,E,U,A,E,CAMV,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,IANU,CAAA,EAAA,SAAA,CAAA,mBAAA,KAAA,G,A,C,E,E,U,A,E,CAOV,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,IAPU,CAAA,EAAA,SAAA,CAAA,2BAAA,KAAA,GAAA,AAAA,CAAA,EAAA,EAAA,UAAA,AAAA,EAAA,CAzZZ,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,EAAc,CACb,KAAM,mBACN,SAAU,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAC,GACT,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;;;;;;qBAOK,EAAE,CACX,cACA,AAA6B,OAA7B,EAAY,YAAY,CAAY,GAAM,EAAY,YAAY,CAAG,UAAY,YAClF,CAAC,IAAI,CAAC,IAAI;yBACI,EAAE,CACX,QACA,AAA6B,OAA7B,EAAY,YAAY,CAAY,GAAM,EAAY,YAAY,CAAG,UAAY,YAClF,CAAC,IAAI,CAAC,IAAI;;;qBAGJ,EAAE,IAAM,EAAY,eAAe,GAAG;;qBAEtC,EAAE,EAAY,KAAK,EAAI,GAAG;;wBAEvB,EAAE,CACV,OACA,AAA6B,OAA7B,EAAY,YAAY,CAAY,GAAM,EAAY,YAAY,CAAG,UAAY,YAClF,CAAC,IAAI,CAAC,IAAI;cACX,EAAE,AAA6B,OAA7B,EAAY,YAAY,CAAY,GACpC,EAAY,YAAY,CACtB,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,yEAAyE,CAAC,CAC/E,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,+DAA+D,CAAC,CACxE;;;;;;;;;qBASM,EAAE,CACX,cACA,AAAgC,OAAhC,EAAY,eAAe,CAAY,GAAM,EAAY,eAAe,CAAG,UAAY,YACxF,CAAC,IAAI,CAAC,IAAI;yBACI,EAAE,CACX,QACA,AAAgC,OAAhC,EAAY,eAAe,CAAY,GAAM,EAAY,eAAe,CAAG,UAAY,YACxF,CAAC,IAAI,CAAC,IAAI;;;qBAGJ,EAAE,IAAM,EAAY,kBAAkB,GAAG;;qBAEzC,EAAE,EAAY,QAAQ,EAAI,GAAG;;wBAE1B,EAAE,CACV,OACA,AAAgC,OAAhC,EAAY,eAAe,CAAY,GAAM,EAAY,eAAe,CAAG,UAAY,YACxF,CAAC,IAAI,CAAC,IAAI;cACX,EAAE,AAAgC,OAAhC,EAAY,eAAe,CAAY,GACvC,EAAY,eAAe,CACzB,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,yEAAyE,CAAC,CAC/E,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,kEAAkE,CAAC,CAC3E;;;;;qBAKM,EAAE,CACX,cACA,AAAyC,OAAzC,EAAY,wBAAwB,CAAY,GAAM,EAAY,wBAAwB,CAAG,UAAY,YAC1G,CAAC,IAAI,CAAC,IAAI;yBACI,EAAE,CACX,QACA,AAAyC,OAAzC,EAAY,wBAAwB,CAAY,GAAM,EAAY,wBAAwB,CAAG,UAAY,YAC1G,CAAC,IAAI,CAAC,IAAI;;;qBAGJ,EAAE,IAAM,EAAY,yBAAyB,GAAG;;qBAEhD,EAAE,EAAY,YAAY,EAAI,GAAG;;wBAE9B,EAAE,CACV,OACA,AAAyC,OAAzC,EAAY,wBAAwB,CAAY,GAAM,EAAY,wBAAwB,CAAG,UAAY,YAC1G,CAAC,IAAI,CAAC,IAAI;cACX,EAAE,AAAyC,OAAzC,EAAY,wBAAwB,CAAY,GAChD,EAAY,wBAAwB,CAClC,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,yEAAyE,CAAC,CAC/E,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,+DAA+D,CAAC,CACxE;;;;;;;qBAOM,EAAE,KAAO,EAAY,cAAc,EAAE,EAAE;;;;;;;qBAOvC,EAAE,KAAO,EAAY,mBAAmB,EAAE,EAAE;;;;;;;qBAO5C,EAAE,KAAO,EAAY,kBAAkB,EAAE,EAAE;;;;;;;;;cASlD,EAAE,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,EAAY,WAAW,CAAC,CAAC,EAAE,EAAA,GAAE,CAAE,uBAAuB,CAAC,EAAG,AAAC,GAChE,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EACZ,EACA,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAC,GACC,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,sCAAsC,EAAE,EAAK,QAAQ,CAAC,aAAa,EAAE,EAAK,IAAI,CAAC,UAAU,EAAE,AAAC,GAAS,EAAY,wBAAwB,CAAC,GAAM;sBAC1J,EAAE,EAAK,QAAQ,CAAC,GAAG,EAAE,EAAK,IAAI,CAAC;0BAC3B,CAAC,CACP,CAAC,EACH,CAAC,EACF;;;;;;;;;;cAUH,EAAE,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,EAAY,WAAW,CAAC,CAAC,EAAE,EAAA,GAAE,CAAE,mBAAmB,CAAC,EAAG,AAAC,GAC5D,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EACZ,EACA,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAC,GACC,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,sCAAsC,EAAE,EAAK,KAAK,CAAC,UAAU,EAAE,AAAC,GAAS,EAAY,wBAAwB,CAAC,GAAM;sBAC9H,EAAE,EAAK,KAAK,CAAC;0BACT,CAAC,CACP,CAAC,EACH,CAAC,EACF;;;;;;;;;oBASG,EAAE,IAAM,EAAY,QAAQ,GAAG;;;;;;;IAO/C,CAAC,CACD,CAAC,CACH,OAAQ,CACN,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,CAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8OJ,CAAC,CACF,CACD,cAAe,CAAE,KAAM,MAAO,CAChC,GACa,CAAA,E,G,E,Q,S,C,C,C,E,E,Q,G,E,Q,S,C,C,C,E,I,E,E,S,E,E,S,E,S,E,S,E,S,I,E,E,QE3QN,OAAM,UAAoB,EAAA,YAAW,CAc1C,yBAAyB,CAAY,CAAE,CAAuB,CAAE,CAAuB,CAAQ,CAG7F,KAAK,CAAC,yBAAyB,EAAM,EAAU,EACjD,CAEA,iBAAiB,CAAK,CAAE,CACtB,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAC3C,EAAa,GAAQ,CAAC,EAAE,CAAC,OAAS,EAExC,CAAA,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,YAAY,EACnB,CAEA,oBAAoB,CAAK,CAAE,CACzB,IAAM,EAAS,IAAI,CAAC,UAAU,EAAE,iBAAiB,SAC3C,EAAW,GAAQ,CAAC,EAAE,CAAC,OAAS,GACtC,QAAQ,GAAG,CAAC,GAEZ,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,YAAY,EACnB,CAEA,cAAe,CACb,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EACnC,IAAI,CAAC,WAAW,CAAG,AAAc,KAAd,IAAI,CAAC,IAAI,EAAW,AAAkB,KAAlB,IAAI,CAAC,QAAQ,CACpD,IAAI,CAAC,YAAY,CAAG,IAAI,CAAC,WAAW,CAAG,KAAO,wDAChD,CAEA,MAAM,UAAW,CACf,GAAI,IAAI,CAAC,WAAW,CAAE,CACpB,IAAM,EAAO,CACX,MAAO,IAAI,CAAC,IAAI,CAChB,YAAa,IAAI,CAAC,QAAQ,AAC5B,EACA,QAAQ,GAAG,CAAC,GAEZ,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,CAAC,EAAE,EAAA,GAAE,CAAE,QAAQ,CAAC,CAAE,CAC7C,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,EACvB,GAGA,GAAI,EAAS,EAAE,CAAE,CACf,IAAM,EAAS,MAAM,EAAS,IAAI,GAClC,QAAQ,GAAG,CAAC,GAGZ,OAAO,QAAQ,CAAC,IAAI,CAAG,kBACzB,MAEE,QAAQ,KAAK,CAAC,gCAAiC,EAAS,UAAU,EAClE,IAAI,CAAC,YAAY,CAAG,4DAGxB,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,8BAA+B,GAC7C,IAAI,CAAC,YAAY,CAAG,wDACtB,CACF,MACE,IAAI,CAAC,YAAY,CAAG,mCAExB,CAKA,aAAc,CACZ,IAAI,CAAC,YAAY,GACb,IAAI,CAAC,WAAW,EAClB,IAAI,CAAC,QAAQ,EAEjB,CAEA,kBAAmB,CACjB,IAAI,CAAC,UAAU,CAAG,CAAC,IAAI,CAAC,UAAU,AACpC,C,Y,G,C,C,C,K,I,GA3FS,IAAA,CAAA,KAAA,CAAgB,GAChB,IAAA,CAAA,QAAA,CAAmB,GACnB,IAAA,CAAA,UAAA,CAAsB,CAAA,EACtB,IAAA,CAAA,WAAA,CAAuB,CAAA,EACvB,IAAA,CAAA,YAAA,CAA8B,KAE9B,IAAA,CAAA,QAAA,CAAoB,CAAA,EAE7B,IAAA,CAAA,IAAA,CAAc,GACd,IAAA,CAAA,QAAA,CAAkB,E,CAmFpB,C,A,C,E,E,U,A,E,CA5FG,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAHU,CAAA,EAAA,SAAA,CAAA,QAAA,KAAA,G,A,C,E,E,U,A,E,CAIV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAJU,CAAA,EAAA,SAAA,CAAA,WAAA,KAAA,G,A,C,E,E,U,A,E,CAKV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IALU,CAAA,EAAA,SAAA,CAAA,aAAA,KAAA,G,A,C,E,E,U,A,E,CAMV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IANU,CAAA,EAAA,SAAA,CAAA,cAAA,KAAA,G,A,C,E,E,U,A,E,CAOV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAPU,CAAA,EAAA,SAAA,CAAA,eAAA,KAAA,G,A,C,E,E,U,A,E,CASV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IATU,CAAA,EAAA,SAAA,CAAA,WAAA,KAAA,GAAA,AAAA,CAAA,EAAA,EAAA,UAAA,AAAA,EAAA,CA7IZ,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,EAAc,CACb,KAAM,oBACN,SAAU,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAC,GACT,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;;;;;;;;;;sBAWM,EAAE,AAAC,GAAU,EAAM,gBAAgB,GAAG;qBACvC,EAAE,EAAY,KAAK,CAAC;;;;;;;;sBAQnB,EAAE,AAAC,GAAgB,EAAY,mBAAmB,GAAG;qBACtD,EAAE,EAAY,QAAQ,CAAC;;;;;uBAKrB,EAAE,CAAC,EAAY,WAAW,CAAC;oBAC9B,EAAE,IAAM,EAAY,WAAW,GAAG;;;;;QAK9C,EAAE,EAAY,YAAY,CACtB,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,2BAA2B,EAAE,EAAY,YAAY,CAAC,MAAM,CAAC,CAClE,GAAG;;IAEX,CAAC,CACD,CAAC,CACH,OAAQ,CACN,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,CAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+FJ,CAAC,CACF,CACD,cAAe,CAAE,KAAM,MAAO,CAChC,GACa,CAAA,E,G,E,Q,S,C,C,C,E,E,Q,G,E,Q,S,C,C,C,E,I,E,E,S,E,E,S,E,S,E,S,E,QEjEN,OAAM,UAAqB,EAAA,YAAW,CAc3C,yBAAyB,CAAY,CAAE,CAAuB,CAAE,CAAuB,CAAQ,CAChF,WAAT,GACF,CAAA,IAAI,CAAC,QAAQ,CAAG,AAAa,SAAb,CADlB,EAGa,SAAT,GACF,CAAA,IAAI,CAAC,MAAM,CAAG,AAAa,SAAb,CADhB,EAGa,YAAT,GACF,CAAA,IAAI,CAAC,SAAS,CAAG,AAAa,SAAb,CADnB,EAGa,YAAT,GACF,CAAA,IAAI,CAAC,SAAS,CAAG,AAAa,SAAb,CADnB,EAGa,WAAT,GACF,CAAA,IAAI,CAAC,QAAQ,CAAG,AAAa,SAAb,CADlB,EAIA,KAAK,CAAC,yBAAyB,EAAM,EAAU,EACjD,C,Y,G,C,C,C,K,I,GA9BQ,IAAA,CAAA,MAAA,CAAkC,KAClC,IAAA,CAAA,IAAA,CAAgC,KAChC,IAAA,CAAA,OAAA,CAAmC,KACnC,IAAA,CAAA,OAAA,CAAmC,KACnC,IAAA,CAAA,MAAA,CAAkC,KAEjC,IAAA,CAAA,QAAA,CAAoB,CAAA,EACpB,IAAA,CAAA,MAAA,CAAkB,CAAA,EAClB,IAAA,CAAA,SAAA,CAAqB,CAAA,EACrB,IAAA,CAAA,SAAA,CAAqB,CAAA,EACrB,IAAA,CAAA,QAAA,CAAoB,CAAA,C,CAqB/B,C,A,C,E,E,U,A,E,CA/BG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,IAFU,CAAA,EAAA,SAAA,CAAA,SAAA,KAAA,G,A,C,E,E,U,A,E,CAGV,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,IAHU,CAAA,EAAA,SAAA,CAAA,OAAA,KAAA,G,A,C,E,E,U,A,E,CAIV,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,IAJU,CAAA,EAAA,SAAA,CAAA,UAAA,KAAA,G,A,C,E,E,U,A,E,CAKV,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,IALU,CAAA,EAAA,SAAA,CAAA,UAAA,KAAA,G,A,C,E,E,U,A,E,CAMV,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,IANU,CAAA,EAAA,SAAA,CAAA,SAAA,KAAA,G,A,C,E,E,U,A,E,CAQV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IARU,CAAA,EAAA,SAAA,CAAA,WAAA,KAAA,G,A,C,E,E,U,A,E,CASV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IATU,CAAA,EAAA,SAAA,CAAA,SAAA,KAAA,G,A,C,E,E,U,A,E,CAUV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAVU,CAAA,EAAA,SAAA,CAAA,YAAA,KAAA,G,A,C,E,E,U,A,E,CAWV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAXU,CAAA,EAAA,SAAA,CAAA,YAAA,KAAA,G,A,C,E,E,U,A,E,CAYV,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IAZU,CAAA,EAAA,SAAA,CAAA,WAAA,KAAA,GAAA,AAAA,CAAA,EAAA,EAAA,UAAA,AAAA,EAAA,CA9EZ,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,EAAc,CACb,KAAM,mBACN,SAAU,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAC,GACT,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;kBACE,EAAE,CACV,eACA,EAAa,QAAQ,CAAG,UAAY,GACpC,EAAa,MAAM,CAAG,QAAU,GAChC,EAAa,SAAS,CAAG,WAAa,GACtC,EAAa,SAAS,CAAG,WAAa,GACtC,EAAa,QAAQ,CAAG,UAAY,GACrC,CAAC,IAAI,CAAC,IAAI;;UAET,EAAE,EAAa,QAAQ,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,+BAA+B,CAAC,CAAG,GAAG;UACrE,EAAE,EAAa,MAAM,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,6CAA6C,CAAC,CAAG,GAAG;UACjF,EAAE,EAAa,SAAS,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,+CAA+C,CAAC,CAAG,GAAG;UACtF,EAAE,EAAa,SAAS,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,+DAA+D,CAAC,CAAG,GAAG;UACtG,EAAE,EAAa,QAAQ,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,2DAA2D,CAAC,CAAG,GAAG;;;;YAI/F,EAAE,EAAa,QAAQ,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,+BAA+B,CAAC,CAAG,GAAG;YACrE,EAAE,EAAa,MAAM,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,oBAAoB,CAAC,CAAG,GAAG;YACxD,EAAE,EAAa,SAAS,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,gBAAgB,CAAC,CAAG,GAAG;YACvD,EAAE,EAAa,SAAS,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,gBAAgB,CAAC,CAAG,GAAG;YACvD,EAAE,EAAa,QAAQ,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,eAAe,CAAC,CAAG,GAAG;;;;;;;;;;IAU7D,CAAC,CACD,CAAC,CACH,OAAQ,CACN,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,CAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCJ,CAAC,CACF,CACD,cAAe,CAAE,KAAM,MAAO,CAChC,GAEa,CAAA,E,G,E,Q,S,C,C,C,E,E,Q,G,E,Q,S,C,C,C,E,I,E,E,S,E,E,S,E,S,E,S,E,QEvBN,OAAM,UAAmB,EAAA,YAAW,CAEzC,mBAAoB,CAClB,KAAK,CAAC,oBACN,IAAI,CAAC,OAAO,EACd,CACA,SAAU,CACR,IAAM,EAAiB,aAAa,OAAO,CAAC,YAC5C,GAAI,CAAC,EACH,MAAM,AAAI,MAAM,8DAGlB,IAAM,EAAW,KAAK,KAAK,CAAC,GAC5B,QAAQ,GAAG,CAAC,kCAAmC,GAG/C,IAAM,EAAW,EAAS,IAAI,CAC9B,QAAQ,GAAG,CAAC,yBAA2B,GAGnC,AAAa,kBAAb,GAAgC,AAAa,wBAAb,EAClC,IAAI,CAAC,OAAO,CAAG,CAAA,EAEf,IAAI,CAAC,OAAO,CAAG,CAAA,EAGjB,QAAQ,GAAG,CAAC,8BAA+B,IAAI,CAAC,OAAO,CACzD,CACA,QAAS,CACP,aAAa,KAAK,GAClB,OAAO,QAAQ,CAAC,IAAI,CAAG,oEACzB,C,Y,G,C,C,C,K,I,GA9BS,IAAA,CAAA,OAAA,CAAmB,I,CAmC9B,C,A,C,E,E,U,A,E,CAnCG,AAAA,CAAA,EAAA,EAAA,KAAI,AAAJ,IADU,CAAA,EAAA,SAAA,CAAA,UAAA,KAAA,GAAA,AAAA,CAAA,EAAA,EAAA,UAAA,AAAA,EAAA,CAvDZ,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,EAAc,CACb,KAAM,mBACN,SAAU,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,EAAE,AAAC,GACT,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC;;;;;;;;YAQJ,EAAE,AAAuB,CAAA,IAAvB,EAAW,OAAO,CAAY,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,gEAAgE,CAAC,CAAG,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,CAAI,CAAC,CAAC,CAAC;;;+BAG7F,EAAE,IAAM,EAAW,MAAM,GAAG;;;UAGjD,CAAC,CACP,CAAC,CACH,OAAS,CACP,AAAA,CAAA,EAAA,EAAA,GAAE,AAAF,CAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgCJ,CAAC,CACF,AACH,GACa,CAAA,E","sources":["<anon>","ui/src/components/index.ts","ui/src/components/login/index.ts","ui/src/components/login/login.ts","ui/src/components/inscription/index.ts","ui/src/components/inscription/inscription.ts","ui/src/components/password/index.ts","ui/src/components/password/password.ts","ui/src/components/notification/index.ts","ui/src/components/notification/notification.ts","ui/src/components/navigation/index.ts","ui/src/components/navigation/navigation.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirec605\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirec605\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"7KTRf\", function(module, exports) {\nparcelRequire(\"lnjTs\");\nparcelRequire(\"6D2jc\");\nparcelRequire(\"eUTkO\");\nparcelRequire(\"3T3Tr\");\nparcelRequire(\"jcBBX\");\n\nvar $augsA = parcelRequire(\"augsA\");\n\nvar $4cMYp = parcelRequire(\"4cMYp\");\n\nvar $hmMWw = parcelRequire(\"hmMWw\");\n\nvar $3d3pD = parcelRequire(\"3d3pD\");\n\nvar $3Bkhj = parcelRequire(\"3Bkhj\");\n\n});\nparcelRegister(\"lnjTs\", function(module, exports) {\nparcelRequire(\"augsA\");\n\n});\nparcelRegister(\"augsA\", function(module, exports) {\n\nvar $7WQrb = parcelRequire(\"7WQrb\");\n\nvar $5D1XK = parcelRequire(\"5D1XK\");\nparcelRequire(\"RKbfs\");\nparcelRequire(\"3I5Zu\");\nparcelRequire(\"dLLJA\");\n\nvar $keLaC = parcelRequire(\"keLaC\");\nclass $63c0eb825134691e$export$21a94553ffa41578 extends (0, $5D1XK.WebComponent) {\n    attributeChangedCallback(name, oldValue, newValue) {\n        super.attributeChangedCallback(name, oldValue, newValue);\n    }\n    handleEmailInput(login) {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const emailValue = inputs?.[0].value || \"\";\n        this.Mail = emailValue;\n        this.validateForm();\n    }\n    handlePasswordInput(login) {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const password = inputs?.[1].value || \"\";\n        console.log(password);\n        this.Password = password;\n        this.validateForm();\n    }\n    validateForm() {\n        console.log(this.Mail, this.Password);\n        this.isFormValid = this.Mail !== \"\" && this.Password !== \"\";\n        this.errorMessage = this.isFormValid ? null : \"Veuillez entrer \\xe0 la fois un email et un mot de passe.\";\n    }\n    async sendData() {\n        if (this.isFormValid) {\n            const data = {\n                email: this.Mail,\n                password: this.Password\n            };\n            console.log(data);\n            try {\n                const response = await fetch(`${(0, $keLaC.url)}connexion/`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    credentials: \"include\",\n                    body: JSON.stringify(data)\n                });\n                // Vérification de la réponse HTTP\n                if (response.ok) {\n                    const result = await response.json();\n                    console.log(\"Connexion r\\xe9ussie\", result);\n                    console.log(result);\n                    const userData = {\n                        last_name: result.userData.nom,\n                        first_name: result.userData.prenom,\n                        email: result.userData.email,\n                        role: result.userData.role,\n                        isloged: result.userData.isloged\n                    };\n                    // Stockage des informations utilisateur dans localStorage\n                    localStorage.setItem(\"userData\", JSON.stringify(userData));\n                    alert(\"connexion r\\xe9ussie\");\n                    // Rediriger après une légère attente\n                    setTimeout(()=>{\n                        window.location.href = \"/pages/cours\";\n                    }, 1000);\n                    if (result.token) {\n                        console.log(\"Token JWT:\", result.token);\n                        localStorage.setItem(\"token\", result.token); // Optionnel : stocker le token dans le localStorage\n                    } else console.error(\"Erreur de connexion\");\n                } else {\n                    // Gestion des erreurs de statut (par exemple, 401 Unauthorized)\n                    console.error(\"Erreur lors de la connexion :\", response.statusText);\n                    this.errorMessage = \"\\xc9chec de la connexion. Veuillez v\\xe9rifier vos informations.\";\n                }\n            } catch (error) {\n                console.error(\"Erreur lors de la requ\\xeate :\", error);\n                this.errorMessage = \"Une erreur est survenue. Veuillez r\\xe9essayer plus tard.\";\n            }\n        } else this.errorMessage = \"Veuillez remplir tous les champs.\";\n    }\n    // Gestion de la soumission du formulaire\n    handleLogin() {\n        this.validateForm();\n        if (this.isFormValid) this.sendData();\n    }\n    toggleRememberMe() {\n        this.rememberMe = !this.rememberMe;\n    }\n    constructor(...args){\n        super(...args);\n        this.email = \"\";\n        this.password = \"\";\n        this.rememberMe = false;\n        this.isFormValid = false;\n        this.errorMessage = null;\n        this.isCustom = false;\n        this.Mail = \"\";\n        this.Password = \"\";\n    }\n}\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $63c0eb825134691e$export$21a94553ffa41578.prototype, \"email\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $63c0eb825134691e$export$21a94553ffa41578.prototype, \"password\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $63c0eb825134691e$export$21a94553ffa41578.prototype, \"rememberMe\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $63c0eb825134691e$export$21a94553ffa41578.prototype, \"isFormValid\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $63c0eb825134691e$export$21a94553ffa41578.prototype, \"errorMessage\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $63c0eb825134691e$export$21a94553ffa41578.prototype, \"isCustom\", void 0);\n$63c0eb825134691e$export$21a94553ffa41578 = (0, $7WQrb.__decorate)([\n    (0, $5D1XK.customElement)({\n        name: \"login-page\",\n        template: (0, $5D1XK.html)`${(login)=>{\n            return (0, $5D1XK.html)`\r\n      <div class=\"login\">\r\n        <div class=\"header\">\r\n          <h1>Log in to your account</h1>\r\n        </div>\r\n        <div class=\"main-body\">\r\n          <div class=\"input-field\">\r\n            <pf-icons-envelope></pf-icons-envelope>\r\n            <input \r\n              type=\"email\" \r\n              placeholder=\"Email\" \r\n              @input=\"${(login)=>login.handleEmailInput()}\" \r\n              value=\"${login.email}\"\r\n            >\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <pf-icons-lock></pf-icons-lock>\r\n            <input \r\n              type=\"password\" \r\n              placeholder=\"Password\" \r\n              @input=\"${(login)=>login.handlePasswordInput()}\" \r\n              value=\"${login.password}\"\r\n            >\r\n          </div>\r\n          <button \r\n            class=\"button-login\" \r\n            ?disabled=\"${!login.isFormValid}\"\r\n            @click=\"${()=>login.handleLogin()}\"\r\n          >\r\n            Log in\r\n          </button>\r\n        </div>\r\n        <div class=\"remember-password\">\r\n          <div class=\"radio\">\r\n            <input \r\n              type=\"radio\" \r\n              @change=\"${()=>login.toggleRememberMe()}\" \r\n              ?checked=\"${login.rememberMe}\"\r\n            >\r\n            <label for=\"remember me\">Remember me</label>\r\n          </div>\r\n          <a href=\"../password\">Forgot password?</a>\r\n        </div>\r\n        <div class=\"footer\">\r\n          <span>Don't have an account? <a href=\"../inscriptions\">Create an account</a></span>\r\n        </div>\r\n        ${login.errorMessage ? (0, $5D1XK.html)`<div class=\"error-message\">${login.errorMessage}</div>` : \"\"}\r\n      </div>\r\n    `;\n        }}`,\n        styles: [\n            (0, $5D1XK.css)`\r\n      .login{\r\n        width: 500px;\r\n        height: 500px;\r\n        background-color: #ffffff;\r\n        position: absolute;\r\n        top: 25%;\r\n        left: 15%;\r\n        color: black;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 7%;\r\n        border-radius: 5px;\r\n      }\r\n      .main-body {\r\n        display: grid;\r\n        gap: 5px;\r\n        width: 65%;\r\n      }\r\n      .input-field {\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        background-color: #fafbfe;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      input[type=\"email\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"email\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"password\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"password\"]:placeholder{\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"radio\"] {\r\n        appearance: none;\r\n        width: 25px;\r\n        height: 25px;\r\n        border: 1px solid #eff3f8;\r\n        border-radius: 3px;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n        margin: 0;\r\n      }\r\n\r\n      input[type=\"radio\"]:checked {\r\n        background-color: #0066cc; \r\n        border: 1px solid #0066cc;\r\n      }\r\n      label{\r\n        color: #a2adbe;\r\n      }\r\n      .button-login {\r\n        background-color: #0066cc;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 15px 10px;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n        border: none;\r\n        font-size: 18px;\r\n        color: #ffffff;\r\n      }\r\n      .button-login:hover{\r\n        background-color: #004080;\r\n      }\r\n      .remember-password {\r\n        display: flex;\r\n        gap: 50px;\r\n      }\r\n      .radio {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      a{\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n      }\r\n    `\n        ],\n        shadowOptions: {\n            mode: \"open\"\n        }\n    })\n], $63c0eb825134691e$export$21a94553ffa41578);\n\n});\n\n\nparcelRegister(\"6D2jc\", function(module, exports) {\nparcelRequire(\"4cMYp\");\n\n});\nparcelRegister(\"4cMYp\", function(module, exports) {\n\nvar $7WQrb = parcelRequire(\"7WQrb\");\n\nvar $5D1XK = parcelRequire(\"5D1XK\");\nparcelRequire(\"RKbfs\");\nparcelRequire(\"3I5Zu\");\nparcelRequire(\"dLLJA\");\n\nvar $keLaC = parcelRequire(\"keLaC\");\nclass $b21273fa9e92feae$export$6bc58b28a578cd46 extends (0, $5D1XK.WebComponent) {\n    handleDropDownValueTarif(plan) {\n        // Sélectionner les éléments dans le Shadow DOM\n        const dropdownButton = this.shadowRoot?.getElementById(\"dropdownButtonPrice\");\n        const dropdownMenu = this.shadowRoot?.getElementById(\"dropdownMenu\");\n        // Mettre à jour le texte du bouton avec la sélection\n        dropdownButton.textContent = `${plan.nom_plan} - ${plan.prix} \\u{20AC}`;\n        this.tarif = plan.nom_plan;\n        console.log(this.tarif);\n        // Vérifier si le menu est déjà ouvert ou non et ajuster son état\n        if (dropdownMenu.style.display === \"none\" || dropdownMenu.style.display === \"\") // Ouvrir le menu si il est fermé (display: none ou initialement vide)\n        dropdownMenu.style.display = \"block\";\n        else // Fermer le menu si il est déjà ouvert\n        dropdownMenu.style.display = \"none\";\n    }\n    handleDropDownValueGenre(info) {\n        // Sélectionner les éléments dans le Shadow DOM\n        const dropdownButton = this.shadowRoot?.getElementById(\"dropdownButtonGenre\");\n        const dropdownMenu = this.shadowRoot?.getElementById(\"dropdownMenu\");\n        // Mettre à jour le texte du bouton avec la sélection\n        dropdownButton.textContent = `${info.genre}`;\n        this.genre = info.genre;\n        console.log(this.genre);\n        // Vérifier si le menu est déjà ouvert ou non et ajuster son état\n        if (dropdownMenu.style.display === \"none\" || dropdownMenu.style.display === \"\") // Ouvrir le menu si il est fermé (display: none ou initialement vide)\n        dropdownMenu.style.display = \"block\";\n        else // Fermer le menu si il est déjà ouvert\n        dropdownMenu.style.display = \"none\";\n    }\n    async preloadData(url) {\n        console.log(url);\n        try {\n            // Faire la requête pour récupérer les plans tarifaires depuis l'URL\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            // Vérifier si la réponse est correcte\n            if (!response.ok) throw new Error(\"Erreur serveur lors de la r\\xe9cup\\xe9ration des plans tarifaires.\");\n            // Récupérer les données au format JSON\n            const data = await response.json();\n            console.log(\"Plans tarifaires re\\xe7us:\", data);\n            // Retourner les données reçues, ou un tableau vide si aucun élément\n            return data.length > 0 ? data : [];\n        } catch (error) {\n            console.error(\"Erreur lors de la requ\\xeate fetch:\", error);\n            return [];\n        }\n    }\n    handleEmailBlur() {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const emailInput = inputs?.[0];\n        const email = emailInput.value || \"\";\n        if (!email.includes(\"@\")) {\n            console.log('L\\'email doit contenir le caract\\xe8re \"@\"');\n            this.isEmailValid = false;\n        } else {\n            console.log(\"Email valide\");\n            this.isEmailValid = true;\n            this.email = email;\n            console.log(this.email);\n        }\n    //this.checkFormValidity();\n    }\n    handlePasswordBlur() {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const passwordInput = inputs?.[1];\n        const password = passwordInput.value || \"\";\n        const errorMessage = this.CheckStrength(password);\n        if (errorMessage) {\n            console.log(errorMessage);\n            this.isPasswordValid = false;\n        } else {\n            console.log(\"Mot de passe valide\");\n            this.isPasswordValid = true;\n            this.password = password;\n            console.log(this.password);\n        }\n    }\n    CheckStrength(password) {\n        const min = 6;\n        const max = 20;\n        if (password.length < min || password.length > max) return `Le mot de passe doit comporter entre ${min} et ${max} caract\\xe8res.`;\n        const specialCharacters = /[!@#\\$%\\^\\&*\\)\\(+=._-]+/;\n        if (!specialCharacters.test(password)) return \"Le mot de passe doit contenir au moins un caract\\xe8re sp\\xe9cial.\";\n        const hasUpperCase = /[A-Z]/;\n        if (!hasUpperCase.test(password)) return \"Le mot de passe doit contenir au moins une majuscule.\";\n        const hasNumber = /[0-9]/;\n        if (!hasNumber.test(password)) return \"Le mot de passe doit contenir au moins un chiffre.\";\n        return null;\n    }\n    handleConfirmPasswordBlur() {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const confirmPasswordInput = inputs?.[2];\n        const confPassword = confirmPasswordInput.value || \"\";\n        console.log(this.password, confPassword);\n        // Vérifie si les mots de passe sont égaux\n        if (confPassword !== this.password) {\n            console.log(\"Les mots de passe ne correspondent pas\");\n            this.isConfirmPasswordIsValid = false;\n        } else {\n            console.log(\"Les mots de passe correspondent\");\n            this.isConfirmPasswordIsValid = true;\n            this.confPassword = confPassword;\n        }\n    }\n    handleDateBlur() {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const dateInput = inputs?.[3];\n        const date = dateInput.value || \"\";\n        // Peut-être vérifié si le format est bien respecter //\n        this.date = date;\n    }\n    handleFirstNameBlur() {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const firstNameInput = inputs?.[4];\n        const firstName = firstNameInput.value || \"\";\n        this.firstName = firstName;\n    }\n    handleLastNameBlur() {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const lastNameInput = inputs?.[5];\n        const lastName = lastNameInput.value || \"\";\n        this.lastName = lastName;\n    }\n    checkValidity() {\n        const formData = {};\n        if (this.email) formData.email = this.email;\n        else {\n            console.log(\"L'email est manquant.\");\n            return null;\n        }\n        if (this.password) formData.password = this.password;\n        else {\n            console.log(\"Le mot de passe est manquant.\");\n            return null;\n        }\n        if (this.date) formData.date = this.date;\n        else {\n            console.log(\"La date est manquante.\");\n            return null;\n        }\n        if (this.firstName) formData.firstName = this.firstName;\n        else {\n            console.log(\"Le pr\\xe9nom est manquant.\");\n            return null;\n        }\n        if (this.lastName) formData.lastName = this.lastName;\n        else {\n            console.log(\"Le nom de famille est manquant.\");\n            return null;\n        }\n        if (this.tarif) formData.tarif = this.tarif;\n        else {\n            console.log(\"Le choix d'abonnement manquant.\");\n            return null;\n        }\n        if (this.genre) formData.genre = this.genre;\n        else {\n            console.log(\"Le sexe est manquant.\");\n            return null;\n        }\n        console.log(\"Donn\\xe9es du formulaire valides:\", formData);\n        console.log(formData.genre, formData.tarif);\n        return formData;\n    }\n    async sendData() {\n        const formData = this.checkValidity();\n        if (!formData) {\n            console.log(\"Donn\\xe9es invalides, la requ\\xeate ne sera pas envoy\\xe9e.\");\n            return;\n        }\n        console.log(\"Envoi des donn\\xe9es:\", formData);\n        try {\n            const response = await fetch(`${(0, $keLaC.url)}inscriptions`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(formData)\n            });\n            if (response.ok) {\n                const result = await response.text();\n                alert(\"Utilisateur enregistr\\xe9 avec succ\\xe8s !\");\n                window.location.href = \"/pages/connexion\";\n            } else {\n                console.error(\"Erreur lors de l'enregistrement :\", response.statusText);\n                alert(\"Une erreur s'est produite. Veuillez r\\xe9essayer.\");\n            }\n        } catch (error) {\n            console.error(\"Erreur lors de la requ\\xeate :\", error);\n            alert(\"Impossible d'enregistrer la r\\xe9servation.\");\n        }\n    }\n    constructor(...args){\n        super(...args);\n        this.valid = null;\n        this.invalid = null;\n        this.isEmailValid = null;\n        this.isPasswordValid = null;\n        this.isStrongPassword = null;\n        this.isConfirmPasswordIsValid = null;\n        this.email = \"\";\n        this.password = \"\";\n        this.confPassword = \"\";\n        this.date = \"\";\n        this.firstName = \"\";\n        this.lastName = \"\";\n        this.genre = \"\";\n        this.tarif = \"\";\n    }\n}\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $b21273fa9e92feae$export$6bc58b28a578cd46.prototype, \"valid\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $b21273fa9e92feae$export$6bc58b28a578cd46.prototype, \"invalid\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.attr)()\n], $b21273fa9e92feae$export$6bc58b28a578cd46.prototype, \"isEmailValid\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.attr)()\n], $b21273fa9e92feae$export$6bc58b28a578cd46.prototype, \"isPasswordValid\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.attr)()\n], $b21273fa9e92feae$export$6bc58b28a578cd46.prototype, \"isStrongPassword\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.attr)()\n], $b21273fa9e92feae$export$6bc58b28a578cd46.prototype, \"isConfirmPasswordIsValid\", void 0);\n$b21273fa9e92feae$export$6bc58b28a578cd46 = (0, $7WQrb.__decorate)([\n    (0, $5D1XK.customElement)({\n        name: \"inscription-page\",\n        template: (0, $5D1XK.html)`${(inscription)=>{\n            return (0, $5D1XK.html)`\r\n      <div class=\"register\">\r\n        <div class=\"header\">\r\n          <h1>Create a new account</h1>\r\n        </div>\r\n        <div class=\"main-body\">\r\n          \r\n          <div class=${[\n                \"input-field\",\n                inscription.isEmailValid === null ? \"\" : inscription.isEmailValid ? \"-valide\" : \"-invalide\"\n            ].join(\"\")}>\r\n            <input class=${[\n                \"input\",\n                inscription.isEmailValid === null ? \"\" : inscription.isEmailValid ? \"-valide\" : \"-invalide\"\n            ].join(\"\")}\r\n              type=\"email\" \r\n              placeholder=\"Email\"\r\n              @blur=\"${()=>inscription.handleEmailBlur()}\" \r\n              required \r\n              value=\"${inscription.email || \"\"}\">\r\n\r\n            <div class=\"${[\n                \"info\",\n                inscription.isEmailValid === null ? \"\" : inscription.isEmailValid ? \"-valide\" : \"-invalide\"\n            ].join(\"\")}\">\r\n              ${inscription.isEmailValid === null ? \"\" : inscription.isEmailValid ? (0, $5D1XK.html)`<div class=\"valide\"><pf-icons-check-circle></pf-icons-check-circle></div>` : (0, $5D1XK.html)`<span>Votre adresse email doit contenir le caractère '@'</span>`}\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n      \r\n          <div class=${[\n                \"input-field\",\n                inscription.isPasswordValid === null ? \"\" : inscription.isPasswordValid ? \"-valide\" : \"-invalide\"\n            ].join(\"\")}>\r\n            <input class=${[\n                \"input\",\n                inscription.isPasswordValid === null ? \"\" : inscription.isPasswordValid ? \"-valide\" : \"-invalide\"\n            ].join(\"\")}\r\n              type=\"email\" \r\n              placeholder=\"password\"\r\n              @blur=\"${()=>inscription.handlePasswordBlur()}\" \r\n              required \r\n              value=\"${inscription.password || \"\"}\">\r\n\r\n            <div class=\"${[\n                \"info\",\n                inscription.isPasswordValid === null ? \"\" : inscription.isPasswordValid ? \"-valide\" : \"-invalide\"\n            ].join(\"\")}\">\r\n              ${inscription.isPasswordValid === null ? \"\" : inscription.isPasswordValid ? (0, $5D1XK.html)`<div class=\"valide\"><pf-icons-check-circle></pf-icons-check-circle></div>` : (0, $5D1XK.html)`<span>Votre adresse mot de passe doit contenir le caractère</span>`}\r\n            </div>\r\n          </div>\r\n\r\n        \r\n          <div class=${[\n                \"input-field\",\n                inscription.isConfirmPasswordIsValid === null ? \"\" : inscription.isConfirmPasswordIsValid ? \"-valide\" : \"-invalide\"\n            ].join(\"\")}>\r\n            <input class=${[\n                \"input\",\n                inscription.isConfirmPasswordIsValid === null ? \"\" : inscription.isConfirmPasswordIsValid ? \"-valide\" : \"-invalide\"\n            ].join(\"\")}\r\n              type=\"email\" \r\n              placeholder=\"password\"\r\n              @blur=\"${()=>inscription.handleConfirmPasswordBlur()}\" \r\n              required \r\n              value=\"${inscription.confPassword || \"\"}\">\r\n\r\n            <div class=\"${[\n                \"info\",\n                inscription.isConfirmPasswordIsValid === null ? \"\" : inscription.isConfirmPasswordIsValid ? \"-valide\" : \"-invalide\"\n            ].join(\"\")}\">\r\n              ${inscription.isConfirmPasswordIsValid === null ? \"\" : inscription.isConfirmPasswordIsValid ? (0, $5D1XK.html)`<div class=\"valide\"><pf-icons-check-circle></pf-icons-check-circle></div>` : (0, $5D1XK.html)`<span>Votre adresse email doit contenir le caractère '@'</span>`}\r\n            </div>\r\n          </div>\r\n\r\n         \r\n          <div class='input-field'>\r\n            <input type=\"date\" placeholder=\"Date of Birth\" \r\n              @blur=\"${()=>{\n                inscription.handleDateBlur();\n            }}\"\r\n              required>\r\n          </div>\r\n\r\n          \r\n          <div class='input-field'>\r\n            <input type=\"text\" placeholder=\"Prénom\" \r\n              @blur=\"${()=>{\n                inscription.handleFirstNameBlur();\n            }}\" \r\n              required>\r\n          </div>\r\n\r\n          \r\n          <div class='input-field'>\r\n            <input type=\"text\" placeholder=\"Nom\" \r\n              @blur=\"${()=>{\n                inscription.handleLastNameBlur();\n            }}\"\r\n              required>\r\n          </div>\r\n\r\n          <div class=\"dropdown\">\r\n            <details>\r\n            <summary id=\"dropdownButtonPrice\">Choisir un plan</summary>\r\n            <div class=\"dropdown-menu\">\r\n              <!-- Les éléments du menu seront ajoutés ici -->\r\n              ${(0, $5D1XK.asyncAppend)(inscription.preloadData(`${(0, $keLaC.url)}informations/abonnement`), (result)=>{\n                return (0, $5D1XK.html)`${(0, $5D1XK.repeat)(result, (0, $5D1XK.html)`${(plan)=>{\n                    return (0, $5D1XK.html)`<div class=\"dropdown-item\" data-plan=\"${plan.nom_plan}\" data-prix=\"${plan.prix}\" @click=\"${(plan)=>inscription.handleDropDownValueTarif(plan)}\">\r\n                      ${plan.nom_plan} - ${plan.prix} €\r\n                    </div>`;\n                }}`)}`;\n            })}\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div class=\"dropdown\">\r\n            <details>\r\n            <summary id=\"dropdownButtonGenre\">Choisir un genre</summary>\r\n            <div class=\"dropdown-menu\">\r\n              <!-- Les éléments du menu seront ajoutés ici -->\r\n              ${(0, $5D1XK.asyncAppend)(inscription.preloadData(`${(0, $keLaC.url)}informations/gender`), (result)=>{\n                return (0, $5D1XK.html)`${(0, $5D1XK.repeat)(result, (0, $5D1XK.html)`${(info)=>{\n                    return (0, $5D1XK.html)`<div class=\"dropdown-item\" data-plan=\"${info.genre}\" @click=\"${(info)=>inscription.handleDropDownValueGenre(info)}\">\r\n                      ${info.genre}\r\n                    </div>`;\n                }}`)}`;\n            })}\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n          \r\n          <button class=\"button-register\"\r\n            type=\"submit\"\r\n            @click=\"${()=>inscription.sendData()}\">Inscription</button>\r\n        </div>\r\n\r\n        <div class=\"footer\">\r\n          <span>Already have an account? <a href=\"../connexion\">Log in</a></span>\r\n        </div>\r\n      </div>\r\n    `;\n        }}`,\n        styles: [\n            (0, $5D1XK.css)`\r\n      .register{\r\n        width: 500px;\r\n        height: 800px;\r\n        background-color: #ffffff;\r\n        position: absolute;\r\n        top: 10%;\r\n        left: 15%;\r\n        color: black;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 7%;\r\n        border-radius: 3px;\r\n      }\r\n      .main-body {\r\n        display: grid;\r\n        gap: 5px;\r\n        width: 65%;\r\n      }\r\n      .input-field {\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        background-color: #fafbfe;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      input[type=\"email\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      /* Style quand l'email est valide */\r\n      input[type=\"email\"]:valid {\r\n        background-color: #f1f8e9 !important;\r\n      }\r\n\r\n      input[type=\"email\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"date\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"date\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"text\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"text\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"password\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"password\"]:placeholder{\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"radio\"] {\r\n        appearance: none;\r\n        width: 25px;\r\n        height: 25px;\r\n        border: 1px solid #eff3f8;\r\n        border-radius: 3px;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n        margin: 0;\r\n      }\r\n\r\n      input[type=\"radio\"]:checked {\r\n        background-color: #0066cc; \r\n        border: 1px solid #0066cc;\r\n      }\r\n      label{\r\n        color: #a2adbe;\r\n      }\r\n      .button-register {\r\n        background-color: #0066cc;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 15px 10px;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n        border: none;\r\n        font-size: 18px;\r\n        color: #ffffff;\r\n      }\r\n      .button-register:hover{\r\n        background-color: #004080;\r\n      }\r\n      a{\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n      }\r\n      .error {\r\n        color: red;\r\n        font-size: 12px;\r\n      }\r\n      .password-strength {\r\n        height: 8px;\r\n        background-color: #e0e0e0;\r\n        margin-top: 5px;\r\n        border-radius: 4px;\r\n      }\r\n      .strength-bar {\r\n        height: 100%;\r\n        background-color: #76c7c0;\r\n        border-radius: 4px;\r\n        transition: width 0.3s ease-in-out;\r\n      }\r\n      .valide{\r\n        color: #3e8635;\r\n      }\r\n      .info{\r\n        display: none;\r\n      }\r\n      .info.default .valide,\r\n      .info.default span {\r\n        display: none; /* Rien n'est affiché par défaut */\r\n      }\r\n\r\n      .info.valid .valide {\r\n        display: block; /* Affiche l'icône de validation */\r\n      }\r\n\r\n      .info.invalid .valide {\r\n        display: none; /* Masque l'icône en cas d'email invalide */\r\n      }\r\n\r\n      .info.invalid span {\r\n        display: block; /* Affiche le message d'erreur */\r\n      }\r\n      .input-field-valide{\r\n        background-color: #f1f8e9;\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      .input-field-invalide{\r\n        background-color: #ffebee;\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      .input-valide{\r\n        background-color: #f1f8e9; \r\n      }\r\n      .input-invalide{\r\n        background-color: #ffebee;\r\n      }\r\n      /* Conteneur du dropdown */\r\n.dropdown {\r\n  position: relative;\r\n    display: inline-block;\r\n    /* width: 100%; */\r\n    border: 1px solid #eff3f8;\r\n    padding: 20px 10px;\r\n    border-radius: 3px;\r\n    background-color: #fafbfe;\r\n}\r\n\r\n/* Bouton du dropdown */\r\n.dropdown-toggle {\r\n      background-color: #fafbfe;\r\n  color: #a2adcd;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n}\r\n\r\n/* Liste cachée par défaut */\r\n.dropdown-menu {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f9f9f9;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n  z-index: 1;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n}\r\n\r\n/* Eléments du dropdown */\r\n.dropdown-item {\r\n  padding: 12px 16px;\r\n  text-align: left;\r\n  color: black;\r\n  text-decoration: none;\r\n  display: block;\r\n  font-size: 14px;\r\n}\r\n\r\n/* Changer la couleur au survol */\r\n.dropdown-item:hover {\r\n  background-color: #f1f1f1;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Affichage du menu lorsque l'utilisateur clique sur le bouton */\r\n.dropdown:hover .dropdown-menu {\r\n  display: block;\r\n}\r\n\r\nsummary#dropdownButtonPrice {\r\n  color: #a2adcd;\r\n}\r\nsummary#dropdownButtonGenre {\r\n    color: #a2adcd;\r\n}\r\n\r\n\r\n    `\n        ],\n        shadowOptions: {\n            mode: \"open\"\n        }\n    })\n], $b21273fa9e92feae$export$6bc58b28a578cd46);\n\n});\n\n\nparcelRegister(\"eUTkO\", function(module, exports) {\nparcelRequire(\"hmMWw\");\n\n});\nparcelRegister(\"hmMWw\", function(module, exports) {\n\nvar $7WQrb = parcelRequire(\"7WQrb\");\n\nvar $5D1XK = parcelRequire(\"5D1XK\");\nparcelRequire(\"RKbfs\");\nparcelRequire(\"3I5Zu\");\nparcelRequire(\"dLLJA\");\n\nvar $keLaC = parcelRequire(\"keLaC\");\nclass $4f10e442f1ac4c0e$export$804dab9fa8278df0 extends (0, $5D1XK.WebComponent) {\n    attributeChangedCallback(name, oldValue, newValue) {\n        super.attributeChangedCallback(name, oldValue, newValue);\n    }\n    handleEmailInput(login) {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const emailValue = inputs?.[0].value || \"\";\n        this.Mail = emailValue;\n        this.validateForm();\n    }\n    handlePasswordInput(login) {\n        const inputs = this.shadowRoot?.querySelectorAll(\"input\");\n        const password = inputs?.[1].value || \"\";\n        console.log(password);\n        this.Password = password;\n        this.validateForm();\n    }\n    validateForm() {\n        console.log(this.Mail, this.Password);\n        this.isFormValid = this.Mail !== \"\" && this.Password !== \"\";\n        this.errorMessage = this.isFormValid ? null : \"Veuillez entrer \\xe0 la fois un email et un mot de passe.\";\n    }\n    async sendData() {\n        if (this.isFormValid) {\n            const data = {\n                email: this.Mail,\n                newpassword: this.Password\n            };\n            console.log(data);\n            try {\n                const response = await fetch(`${(0, $keLaC.url)}password`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(data)\n                });\n                // Vérification de la réponse HTTP\n                if (response.ok) {\n                    const result = await response.json();\n                    console.log(result);\n                    // Redirection vers la page des cours\n                    window.location.href = \"/pages/connexion\";\n                } else {\n                    // Gestion des erreurs de statut (par exemple, 401 Unauthorized)\n                    console.error(\"Erreur lors de la connexion :\", response.statusText);\n                    this.errorMessage = \"\\xc9chec de la connexion. Veuillez v\\xe9rifier vos informations.\";\n                }\n            } catch (error) {\n                console.error(\"Erreur lors de la requ\\xeate :\", error);\n                this.errorMessage = \"Une erreur est survenue. Veuillez r\\xe9essayer plus tard.\";\n            }\n        } else this.errorMessage = \"Veuillez remplir tous les champs.\";\n    }\n    // Gestion de la soumission du formulaire\n    handleLogin() {\n        this.validateForm();\n        if (this.isFormValid) this.sendData();\n    }\n    toggleRememberMe() {\n        this.rememberMe = !this.rememberMe;\n    }\n    constructor(...args){\n        super(...args);\n        this.email = \"\";\n        this.password = \"\";\n        this.rememberMe = false;\n        this.isFormValid = false;\n        this.errorMessage = null;\n        this.isCustom = false;\n        this.Mail = \"\";\n        this.Password = \"\";\n    }\n}\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $4f10e442f1ac4c0e$export$804dab9fa8278df0.prototype, \"email\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $4f10e442f1ac4c0e$export$804dab9fa8278df0.prototype, \"password\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $4f10e442f1ac4c0e$export$804dab9fa8278df0.prototype, \"rememberMe\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $4f10e442f1ac4c0e$export$804dab9fa8278df0.prototype, \"isFormValid\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $4f10e442f1ac4c0e$export$804dab9fa8278df0.prototype, \"errorMessage\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $4f10e442f1ac4c0e$export$804dab9fa8278df0.prototype, \"isCustom\", void 0);\n$4f10e442f1ac4c0e$export$804dab9fa8278df0 = (0, $7WQrb.__decorate)([\n    (0, $5D1XK.customElement)({\n        name: \"page-new-password\",\n        template: (0, $5D1XK.html)`${(newpassword)=>{\n            return (0, $5D1XK.html)`\r\n      <div class=\"login\">\r\n        <div class=\"header\">\r\n          <h1>Change your password</h1>\r\n        </div>\r\n        <div class=\"main-body\">\r\n          <div class=\"input-field\">\r\n            <pf-icons-envelope></pf-icons-envelope>\r\n            <input \r\n              type=\"email\" \r\n              placeholder=\"Email\" \r\n              @input=\"${(login)=>login.handleEmailInput()}\" \r\n              value=\"${newpassword.email}\"\r\n            >\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <pf-icons-lock></pf-icons-lock>\r\n            <input \r\n              type=\"password\" \r\n              placeholder=\"Password\" \r\n              @input=\"${(newpassword)=>newpassword.handlePasswordInput()}\" \r\n              value=\"${newpassword.password}\"\r\n            >\r\n          </div>\r\n          <button \r\n            class=\"button-login\" \r\n            ?disabled=\"${!newpassword.isFormValid}\"\r\n            @click=\"${()=>newpassword.handleLogin()}\"\r\n          >\r\n            Save changes\r\n          </button>\r\n        </div>\r\n        ${newpassword.errorMessage ? (0, $5D1XK.html)`<div class=\"error-message\">${newpassword.errorMessage}</div>` : \"\"}\r\n      </div>\r\n    `;\n        }}`,\n        styles: [\n            (0, $5D1XK.css)`\r\n      .login{\r\n        width: 500px;\r\n        height: 500px;\r\n        background-color: #ffffff;\r\n        position: absolute;\r\n        top: 25%;\r\n        left: 15%;\r\n        color: black;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 7%;\r\n        border-radius: 5px;\r\n      }\r\n      .main-body {\r\n        display: grid;\r\n        gap: 5px;\r\n        width: 65%;\r\n      }\r\n      .input-field {\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        background-color: #fafbfe;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      input[type=\"email\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"email\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"password\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"password\"]:placeholder{\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"radio\"] {\r\n        appearance: none;\r\n        width: 25px;\r\n        height: 25px;\r\n        border: 1px solid #eff3f8;\r\n        border-radius: 3px;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n        margin: 0;\r\n      }\r\n\r\n      input[type=\"radio\"]:checked {\r\n        background-color: #0066cc; \r\n        border: 1px solid #0066cc;\r\n      }\r\n      label{\r\n        color: #a2adbe;\r\n      }\r\n      .button-login {\r\n        background-color: #0066cc;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 15px 10px;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n        border: none;\r\n        font-size: 18px;\r\n        color: #ffffff;\r\n      }\r\n      .button-login:hover{\r\n        background-color: #004080;\r\n      }\r\n      .remember-password {\r\n        display: flex;\r\n        gap: 50px;\r\n      }\r\n      .radio {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      a{\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n      }\r\n    `\n        ],\n        shadowOptions: {\n            mode: \"open\"\n        }\n    })\n], $4f10e442f1ac4c0e$export$804dab9fa8278df0);\n\n});\n\n\nparcelRegister(\"3T3Tr\", function(module, exports) {\nparcelRequire(\"3d3pD\");\n\n});\nparcelRegister(\"3d3pD\", function(module, exports) {\n\nvar $7WQrb = parcelRequire(\"7WQrb\");\n\nvar $5D1XK = parcelRequire(\"5D1XK\");\nparcelRequire(\"RKbfs\");\nparcelRequire(\"3I5Zu\");\nparcelRequire(\"dLLJA\");\nclass $c309728b190c0262$export$14834abbfce3b8cd extends (0, $5D1XK.WebComponent) {\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === \"custom\") this.isCustom = newValue === \"true\";\n        if (name === \"info\") this.isInfo = newValue === \"true\";\n        if (name === \"success\") this.isSuccess = newValue === \"true\";\n        if (name === \"warning\") this.isWarning = newValue === \"true\";\n        if (name === \"danger\") this.isDanger = newValue === \"true\";\n        super.attributeChangedCallback(name, oldValue, newValue);\n    }\n    constructor(...args){\n        super(...args);\n        this.custom = null;\n        this.info = null;\n        this.success = null;\n        this.warning = null;\n        this.danger = null;\n        this.isCustom = false;\n        this.isInfo = false;\n        this.isSuccess = false;\n        this.isWarning = false;\n        this.isDanger = false;\n    }\n}\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.attr)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"custom\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.attr)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"info\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.attr)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"success\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.attr)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"warning\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.attr)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"danger\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"isCustom\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"isInfo\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"isSuccess\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"isWarning\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $c309728b190c0262$export$14834abbfce3b8cd.prototype, \"isDanger\", void 0);\n$c309728b190c0262$export$14834abbfce3b8cd = (0, $7WQrb.__decorate)([\n    (0, $5D1XK.customElement)({\n        name: \"notification-box\",\n        template: (0, $5D1XK.html)`${(notification)=>{\n            return (0, $5D1XK.html)`\r\n      <div class=\"${[\n                \"notification\",\n                notification.isCustom ? \"-custom\" : \"\",\n                notification.isInfo ? \"-info\" : \"\",\n                notification.isSuccess ? \"-success\" : \"\",\n                notification.isWarning ? \"-warning\" : \"\",\n                notification.isDanger ? \"-danger\" : \"\"\n            ].join(\"\")}\">\r\n        <div class=\"icon\">\r\n          ${notification.isCustom ? (0, $5D1XK.html)`<pf-icons-bell></pf-icons-bell>` : \"\"}\r\n          ${notification.isInfo ? (0, $5D1XK.html)`<pf-icons-info-circle></pf-icons-info-circle>` : \"\"}\r\n          ${notification.isSuccess ? (0, $5D1XK.html)`<pf-icons-check-circle></pf-icons-check-circle>` : \"\"}\r\n          ${notification.isWarning ? (0, $5D1XK.html)`<pf-icons-exclamation-triangle></pf-icons-exclamation-triangle>` : \"\"}\r\n          ${notification.isDanger ? (0, $5D1XK.html)`<pf-icons-exclamation-circle></pf-icons-exclamation-circle>` : \"\"}\r\n        </div>\r\n        <div class=\"main-body\">\r\n          <div class=\"title\">\r\n            ${notification.isCustom ? (0, $5D1XK.html)`<pf-icons-bell></pf-icons-bell>` : \"\"}\r\n            ${notification.isInfo ? (0, $5D1XK.html)`<h3>Information</h3>` : \"\"}\r\n            ${notification.isSuccess ? (0, $5D1XK.html)`<h3>Success</h3>` : \"\"}\r\n            ${notification.isWarning ? (0, $5D1XK.html)`<h3>Warning</h3>` : \"\"}\r\n            ${notification.isDanger ? (0, $5D1XK.html)`<h3>Danger</h3>` : \"\"}\r\n          </div>\r\n          <span class=\"custom-text\">\r\n            <slot></slot>\r\n          </span>\r\n        </div>\r\n        <div class=\"toggle-close\">\r\n          <pf-icons-times></pf-icons-times>\r\n        </div>\r\n      </div>\r\n    `;\n        }}`,\n        styles: [\n            (0, $5D1XK.css)`\r\n      .notification-success{\r\n        width: 300px;\r\n        background-color: #ffffff;\r\n        position: fixed;\r\n        top: 0;\r\n        right: 0;\r\n        margin-top: 10px;\r\n        margin-right: 10px;\r\n        padding: 10px 10px;\r\n        border-radius: 5px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        color: #3e8635;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n      }\r\n      .layer-success {\r\n        width: 5%;\r\n        background-color: #4CAF50;\r\n        border-radius: 3px;\r\n      }\r\n      .main-body{\r\n        display: inline-flex;\r\n        align-items: center;\r\n        gap: 20px;\r\n      }\r\n      .toggle-close{\r\n        color: #9E9E9E;\r\n        cursor: pointer;\r\n      }\r\n      .icon {\r\n        transform: translateY(2px);\r\n      }\r\n    `\n        ],\n        shadowOptions: {\n            mode: \"open\"\n        }\n    })\n], $c309728b190c0262$export$14834abbfce3b8cd);\n\n});\n\n\nparcelRegister(\"jcBBX\", function(module, exports) {\nparcelRequire(\"3Bkhj\");\n\n});\nparcelRegister(\"3Bkhj\", function(module, exports) {\n\nvar $7WQrb = parcelRequire(\"7WQrb\");\n\nvar $5D1XK = parcelRequire(\"5D1XK\");\nparcelRequire(\"RKbfs\");\nparcelRequire(\"3I5Zu\");\nparcelRequire(\"dLLJA\");\nclass $ea05b25bc099d7ba$export$b8a61e5c71402559 extends (0, $5D1XK.WebComponent) {\n    connectedCallback() {\n        super.connectedCallback();\n        this.getRole();\n    }\n    getRole() {\n        const userDataString = localStorage.getItem(\"userData\");\n        if (!userDataString) throw new Error(\"Utilisateur non connect\\xe9. Aucune donn\\xe9e dans localStorage.\");\n        const userData = JSON.parse(userDataString);\n        console.log(\"Donn\\xe9es utilisateur r\\xe9cup\\xe9r\\xe9es:\", userData);\n        // Récupérer le rôle de l'utilisateur\n        const userRole = userData.role;\n        console.log(\"R\\xf4le de l'utilisateur:\", userRole);\n        // Vérifier si le rôle est 'administrator' ou 'super-administrator' et mettre à jour isAdmin\n        if (userRole === \"administrator\" || userRole === \"super-administrator\") this.isAdmin = true;\n        else this.isAdmin = false;\n        console.log(\"Est-ce un administrateur ? \", this.isAdmin);\n    }\n    logout() {\n        localStorage.clear();\n        window.location.href = \"http://ec2-18-185-136-232.eu-central-1.compute.amazonaws.com:3000/\";\n    }\n    constructor(...args){\n        super(...args);\n        this.isAdmin = null;\n    }\n}\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $ea05b25bc099d7ba$export$b8a61e5c71402559.prototype, \"isAdmin\", void 0);\n$ea05b25bc099d7ba$export$b8a61e5c71402559 = (0, $7WQrb.__decorate)([\n    (0, $5D1XK.customElement)({\n        name: \"navigation-panel\",\n        template: (0, $5D1XK.html)`${(navigation)=>{\n            return (0, $5D1XK.html)`\r\n    <div class=\"navigation\">\r\n      <div class=\"navigation-list\">\r\n        <div class=\"list\"></div>\r\n          <div class=\"item\"><a href=\"/pages/cours\">cours</a></div>\r\n          <div class=\"item\"><a href=\"/pages/informations\">infos</a></div>\r\n          <div class=\"item\"><a href=\"/pages/compte\">compte</a></div>\r\n          <div class=\"item\"><a href=\"/pages/profile\">profile</a></div>\r\n            ${navigation.isAdmin === true ? (0, $5D1XK.html)`<div class=\"item\"><a href=\"/pages/dashboard\">dashboard</a></div>` : (0, $5D1XK.html)``}\r\n          </div>\r\n          <div class=\"bottom-navigation\">\r\n            <pf-button @click=\"${()=>navigation.logout()}\">Déconnexion</pf-button>\r\n          </div>\r\n      </div>\r\n    </div>`;\n        }}`,\n        styles: [\n            (0, $5D1XK.css)`\r\n    .navigation{\r\n        color: black;\r\n        background-color: #ffffff;\r\n        justify-content: space-between;\r\n        flex-direction: column;\r\n        display: flex;\r\n      }\r\n      .navigation-list{\r\n        color: black;\r\n        background-color: #ffffff;\r\n        justify-content: space-between;\r\n        flex-direction: column;\r\n      }\r\n      .list{\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 10px;\r\n      }\r\n      .item{\r\n        list-style: none;\r\n        padding: 10px 10px;\r\n        transition: 0.3s;\r\n        cursor: pointer\r\n      }\r\n      .item:hover{\r\n        background-color: lightgray\r\n      }\r\n      a{\r\n        color: black;\r\n        text-decoration: none;\r\n      }\r\n    `\n        ]\n    })\n], $ea05b25bc099d7ba$export$b8a61e5c71402559);\n\n});\n\n\n\n\n//# sourceMappingURL=index.7ce64bad.js.map\n","import './login';\r\nimport './inscription';\r\nimport './password';\r\nimport './notification';\r\nimport './navigation';\r\n\r\n\r\nexport { Login } from './login/login';\r\nexport { Inscription } from './inscription/inscription';\r\nexport { NewPassword } from './password/password';\r\nexport { Notification } from './notification/notification';\r\nexport { Navigation } from './navigation/navigation';\r\n","import './login';\r\n\r\nexport * from './login';","import { html , render , WebComponent , customElement , attr , attrState , state, css, ViewTemplate, ViewContext, asyncAppend, repeat, children } from '@lithium-framework/core';\r\nimport '@lithium-framework/router-element';\r\nimport 'unofficial-pf-v5-wc';\r\nimport 'unofficial-pf-v5-wc-icons';\r\nimport LoginPageStyle from '@patternfly/react-styles/css/components/Login/login';\r\nimport {url} from '../../../../url';\r\n\r\n@customElement({\r\n  name: 'login-page',\r\n  template: html`${(login: Login) => {\r\n    return html`\r\n      <div class=\"login\">\r\n        <div class=\"header\">\r\n          <h1>Log in to your account</h1>\r\n        </div>\r\n        <div class=\"main-body\">\r\n          <div class=\"input-field\">\r\n            <pf-icons-envelope></pf-icons-envelope>\r\n            <input \r\n              type=\"email\" \r\n              placeholder=\"Email\" \r\n              @input=\"${(login) => login.handleEmailInput()}\" \r\n              value=\"${login.email}\"\r\n            >\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <pf-icons-lock></pf-icons-lock>\r\n            <input \r\n              type=\"password\" \r\n              placeholder=\"Password\" \r\n              @input=\"${(login) => login.handlePasswordInput()}\" \r\n              value=\"${login.password}\"\r\n            >\r\n          </div>\r\n          <button \r\n            class=\"button-login\" \r\n            ?disabled=\"${!login.isFormValid}\"\r\n            @click=\"${() => login.handleLogin()}\"\r\n          >\r\n            Log in\r\n          </button>\r\n        </div>\r\n        <div class=\"remember-password\">\r\n          <div class=\"radio\">\r\n            <input \r\n              type=\"radio\" \r\n              @change=\"${() => login.toggleRememberMe()}\" \r\n              ?checked=\"${login.rememberMe}\"\r\n            >\r\n            <label for=\"remember me\">Remember me</label>\r\n          </div>\r\n          <a href=\"../password\">Forgot password?</a>\r\n        </div>\r\n        <div class=\"footer\">\r\n          <span>Don't have an account? <a href=\"../inscriptions\">Create an account</a></span>\r\n        </div>\r\n        ${login.errorMessage \r\n          ? html`<div class=\"error-message\">${login.errorMessage}</div>` \r\n          : ''}\r\n      </div>\r\n    `;\r\n  }}`,\r\n  styles: [ \r\n    css`\r\n      .login{\r\n        width: 500px;\r\n        height: 500px;\r\n        background-color: #ffffff;\r\n        position: absolute;\r\n        top: 25%;\r\n        left: 15%;\r\n        color: black;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 7%;\r\n        border-radius: 5px;\r\n      }\r\n      .main-body {\r\n        display: grid;\r\n        gap: 5px;\r\n        width: 65%;\r\n      }\r\n      .input-field {\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        background-color: #fafbfe;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      input[type=\"email\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"email\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"password\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"password\"]:placeholder{\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"radio\"] {\r\n        appearance: none;\r\n        width: 25px;\r\n        height: 25px;\r\n        border: 1px solid #eff3f8;\r\n        border-radius: 3px;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n        margin: 0;\r\n      }\r\n\r\n      input[type=\"radio\"]:checked {\r\n        background-color: #0066cc; \r\n        border: 1px solid #0066cc;\r\n      }\r\n      label{\r\n        color: #a2adbe;\r\n      }\r\n      .button-login {\r\n        background-color: #0066cc;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 15px 10px;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n        border: none;\r\n        font-size: 18px;\r\n        color: #ffffff;\r\n      }\r\n      .button-login:hover{\r\n        background-color: #004080;\r\n      }\r\n      .remember-password {\r\n        display: flex;\r\n        gap: 50px;\r\n      }\r\n      .radio {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      a{\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n      }\r\n    `\r\n  ],\r\n  shadowOptions: { mode: 'open' }\r\n})\r\nexport class Login extends WebComponent {\r\n  \r\n\r\n  @state() email: string = '';\r\n  @state() password: string = '';\r\n  @state() rememberMe: boolean = false;\r\n  @state() isFormValid: boolean = false;\r\n  @state() errorMessage: string | null = null;\r\n\r\n  @state() isCustom: boolean = false;\r\n\r\n  Mail:string = '';\r\n  Password:string = '';\r\n\r\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\r\n    \r\n\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  handleEmailInput(login) {\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const emailValue = inputs?.[0].value || '';\r\n   \r\n    this.Mail = emailValue;\r\n    this.validateForm();\r\n  }\r\n\r\n  handlePasswordInput(login) {\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const password = inputs?.[1].value || '';\r\n    console.log(password)\r\n\r\n    this.Password = password;\r\n    this.validateForm();\r\n  }\r\n\r\n  validateForm() {\r\n    console.log(this.Mail,this.Password)\r\n    this.isFormValid = this.Mail !== '' && this.Password !== '';\r\n    this.errorMessage = this.isFormValid ? null : 'Veuillez entrer à la fois un email et un mot de passe.';\r\n  }\r\n\r\n  async sendData() {\r\n    if (this.isFormValid) {\r\n      const data = {\r\n        email: this.Mail,\r\n        password: this.Password,\r\n      };\r\n      console.log(data);\r\n  \r\n      try {\r\n        const response = await fetch(`${url}connexion/`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(data),\r\n        });\r\n  \r\n        // Vérification de la réponse HTTP\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          console.log(\"Connexion réussie\", result);\r\n          console.log(result);\r\n  \r\n          const userData = {\r\n            last_name: result.userData.nom,\r\n            first_name: result.userData.prenom,\r\n            email: result.userData.email,\r\n            role: result.userData.role,\r\n            isloged: result.userData.isloged\r\n          };\r\n  \r\n          // Stockage des informations utilisateur dans localStorage\r\n          localStorage.setItem('userData', JSON.stringify(userData));\r\n\r\n          alert(\"connexion réussie\");\r\n\r\n          // Rediriger après une légère attente\r\n          setTimeout(() => {\r\n            window.location.href = '/pages/cours';\r\n          }, 1000);\r\n\r\n          if (result.token) {\r\n            console.log('Token JWT:', result.token);\r\n            localStorage.setItem('token', result.token); // Optionnel : stocker le token dans le localStorage\r\n          } else {\r\n            console.error('Erreur de connexion');\r\n          }\r\n  \r\n          \r\n        } else {\r\n          // Gestion des erreurs de statut (par exemple, 401 Unauthorized)\r\n          console.error(\"Erreur lors de la connexion :\", response.statusText);\r\n          this.errorMessage = \"Échec de la connexion. Veuillez vérifier vos informations.\";\r\n        }\r\n  \r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la requête :\", error);\r\n        this.errorMessage = \"Une erreur est survenue. Veuillez réessayer plus tard.\";\r\n      }\r\n    } else {\r\n      this.errorMessage = 'Veuillez remplir tous les champs.';\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  // Gestion de la soumission du formulaire\r\n  handleLogin() {\r\n    this.validateForm();\r\n    if (this.isFormValid) {\r\n      this.sendData();\r\n    }\r\n  }\r\n\r\n  toggleRememberMe() {\r\n    this.rememberMe = !this.rememberMe;\r\n  }\r\n}","import './inscription';\r\n\r\nexport * from './inscription';","import { html , render , WebComponent , customElement , attr , attrState , state, css, ViewTemplate, ViewContext, asyncAppend, repeat, children } from '@lithium-framework/core';\r\nimport '@lithium-framework/router-element';\r\nimport 'unofficial-pf-v5-wc';\r\nimport 'unofficial-pf-v5-wc-icons';\r\nimport {url} from '../../../../url';\r\n\r\n@customElement({\r\n  name: 'inscription-page',\r\n  template: html`${(inscription: Inscription) => {\r\n    return html`\r\n      <div class=\"register\">\r\n        <div class=\"header\">\r\n          <h1>Create a new account</h1>\r\n        </div>\r\n        <div class=\"main-body\">\r\n          \r\n          <div class=${[\r\n            \"input-field\",\r\n            inscription.isEmailValid === null ? '' : (inscription.isEmailValid ? '-valide' : '-invalide')\r\n          ].join('')}>\r\n            <input class=${[\r\n                \"input\",\r\n                inscription.isEmailValid === null ? '' : (inscription.isEmailValid ? '-valide' : '-invalide')\r\n              ].join('')}\r\n              type=\"email\" \r\n              placeholder=\"Email\"\r\n              @blur=\"${() => inscription.handleEmailBlur()}\" \r\n              required \r\n              value=\"${inscription.email || ''}\">\r\n\r\n            <div class=\"${[\r\n                'info',\r\n                inscription.isEmailValid === null ? '' : (inscription.isEmailValid ? '-valide' : '-invalide')\r\n              ].join('')}\">\r\n              ${inscription.isEmailValid === null ? '' : \r\n                inscription.isEmailValid ? \r\n                  html`<div class=\"valide\"><pf-icons-check-circle></pf-icons-check-circle></div>` : \r\n                  html`<span>Votre adresse email doit contenir le caractère '@'</span>`\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n      \r\n          <div class=${[\r\n            \"input-field\",\r\n            inscription.isPasswordValid === null ? '' : (inscription.isPasswordValid ? '-valide' : '-invalide')\r\n          ].join('')}>\r\n            <input class=${[\r\n                \"input\",\r\n                inscription.isPasswordValid === null ? '' : (inscription.isPasswordValid ? '-valide' : '-invalide')\r\n              ].join('')}\r\n              type=\"email\" \r\n              placeholder=\"password\"\r\n              @blur=\"${() => inscription.handlePasswordBlur()}\" \r\n              required \r\n              value=\"${inscription.password || ''}\">\r\n\r\n            <div class=\"${[\r\n                'info',\r\n                inscription.isPasswordValid === null ? '' : (inscription.isPasswordValid ? '-valide' : '-invalide')\r\n              ].join('')}\">\r\n              ${inscription.isPasswordValid === null ? '' : \r\n                inscription.isPasswordValid ? \r\n                  html`<div class=\"valide\"><pf-icons-check-circle></pf-icons-check-circle></div>` : \r\n                  html`<span>Votre adresse mot de passe doit contenir le caractère</span>`\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n        \r\n          <div class=${[\r\n            \"input-field\",\r\n            inscription.isConfirmPasswordIsValid === null ? '' : (inscription.isConfirmPasswordIsValid ? '-valide' : '-invalide')\r\n          ].join('')}>\r\n            <input class=${[\r\n                \"input\",\r\n                inscription.isConfirmPasswordIsValid === null ? '' : (inscription.isConfirmPasswordIsValid ? '-valide' : '-invalide')\r\n              ].join('')}\r\n              type=\"email\" \r\n              placeholder=\"password\"\r\n              @blur=\"${() => inscription.handleConfirmPasswordBlur()}\" \r\n              required \r\n              value=\"${inscription.confPassword || ''}\">\r\n\r\n            <div class=\"${[\r\n                'info',\r\n                inscription.isConfirmPasswordIsValid === null ? '' : (inscription.isConfirmPasswordIsValid ? '-valide' : '-invalide')\r\n              ].join('')}\">\r\n              ${inscription.isConfirmPasswordIsValid === null ? '' : \r\n                inscription.isConfirmPasswordIsValid ? \r\n                  html`<div class=\"valide\"><pf-icons-check-circle></pf-icons-check-circle></div>` : \r\n                  html`<span>Votre adresse email doit contenir le caractère '@'</span>`\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n         \r\n          <div class='input-field'>\r\n            <input type=\"date\" placeholder=\"Date of Birth\" \r\n              @blur=\"${() => {inscription.handleDateBlur()}}\"\r\n              required>\r\n          </div>\r\n\r\n          \r\n          <div class='input-field'>\r\n            <input type=\"text\" placeholder=\"Prénom\" \r\n              @blur=\"${() => {inscription.handleFirstNameBlur()}}\" \r\n              required>\r\n          </div>\r\n\r\n          \r\n          <div class='input-field'>\r\n            <input type=\"text\" placeholder=\"Nom\" \r\n              @blur=\"${() => {inscription.handleLastNameBlur()}}\"\r\n              required>\r\n          </div>\r\n\r\n          <div class=\"dropdown\">\r\n            <details>\r\n            <summary id=\"dropdownButtonPrice\">Choisir un plan</summary>\r\n            <div class=\"dropdown-menu\">\r\n              <!-- Les éléments du menu seront ajoutés ici -->\r\n              ${asyncAppend(inscription.preloadData(`${url}informations/abonnement`), (result) => {\r\n                return html`${repeat(\r\n                  result,\r\n                  html`${(plan) => {\r\n                    return html`<div class=\"dropdown-item\" data-plan=\"${plan.nom_plan}\" data-prix=\"${plan.prix}\" @click=\"${(plan) => inscription.handleDropDownValueTarif(plan)}\">\r\n                      ${plan.nom_plan} - ${plan.prix} €\r\n                    </div>`;\r\n                  }}`\r\n                )}`;\r\n              })}\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n        <div class=\"dropdown\">\r\n            <details>\r\n            <summary id=\"dropdownButtonGenre\">Choisir un genre</summary>\r\n            <div class=\"dropdown-menu\">\r\n              <!-- Les éléments du menu seront ajoutés ici -->\r\n              ${asyncAppend(inscription.preloadData(`${url}informations/gender`), (result) => {\r\n                return html`${repeat(\r\n                  result,\r\n                  html`${(info) => {\r\n                    return html`<div class=\"dropdown-item\" data-plan=\"${info.genre}\" @click=\"${(info) => inscription.handleDropDownValueGenre(info)}\">\r\n                      ${info.genre}\r\n                    </div>`;\r\n                  }}`\r\n                )}`;\r\n              })}\r\n            </div>\r\n          </details>\r\n        </div>\r\n\r\n\r\n          \r\n          <button class=\"button-register\"\r\n            type=\"submit\"\r\n            @click=\"${() => inscription.sendData()}\">Inscription</button>\r\n        </div>\r\n\r\n        <div class=\"footer\">\r\n          <span>Already have an account? <a href=\"../connexion\">Log in</a></span>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }}`,\r\n  styles: [ \r\n    css`\r\n      .register{\r\n        width: 500px;\r\n        height: 800px;\r\n        background-color: #ffffff;\r\n        position: absolute;\r\n        top: 10%;\r\n        left: 15%;\r\n        color: black;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 7%;\r\n        border-radius: 3px;\r\n      }\r\n      .main-body {\r\n        display: grid;\r\n        gap: 5px;\r\n        width: 65%;\r\n      }\r\n      .input-field {\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        background-color: #fafbfe;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      input[type=\"email\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      /* Style quand l'email est valide */\r\n      input[type=\"email\"]:valid {\r\n        background-color: #f1f8e9 !important;\r\n      }\r\n\r\n      input[type=\"email\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"date\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"date\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"text\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"text\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"password\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"password\"]:placeholder{\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"radio\"] {\r\n        appearance: none;\r\n        width: 25px;\r\n        height: 25px;\r\n        border: 1px solid #eff3f8;\r\n        border-radius: 3px;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n        margin: 0;\r\n      }\r\n\r\n      input[type=\"radio\"]:checked {\r\n        background-color: #0066cc; \r\n        border: 1px solid #0066cc;\r\n      }\r\n      label{\r\n        color: #a2adbe;\r\n      }\r\n      .button-register {\r\n        background-color: #0066cc;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 15px 10px;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n        border: none;\r\n        font-size: 18px;\r\n        color: #ffffff;\r\n      }\r\n      .button-register:hover{\r\n        background-color: #004080;\r\n      }\r\n      a{\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n      }\r\n      .error {\r\n        color: red;\r\n        font-size: 12px;\r\n      }\r\n      .password-strength {\r\n        height: 8px;\r\n        background-color: #e0e0e0;\r\n        margin-top: 5px;\r\n        border-radius: 4px;\r\n      }\r\n      .strength-bar {\r\n        height: 100%;\r\n        background-color: #76c7c0;\r\n        border-radius: 4px;\r\n        transition: width 0.3s ease-in-out;\r\n      }\r\n      .valide{\r\n        color: #3e8635;\r\n      }\r\n      .info{\r\n        display: none;\r\n      }\r\n      .info.default .valide,\r\n      .info.default span {\r\n        display: none; /* Rien n'est affiché par défaut */\r\n      }\r\n\r\n      .info.valid .valide {\r\n        display: block; /* Affiche l'icône de validation */\r\n      }\r\n\r\n      .info.invalid .valide {\r\n        display: none; /* Masque l'icône en cas d'email invalide */\r\n      }\r\n\r\n      .info.invalid span {\r\n        display: block; /* Affiche le message d'erreur */\r\n      }\r\n      .input-field-valide{\r\n        background-color: #f1f8e9;\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      .input-field-invalide{\r\n        background-color: #ffebee;\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      .input-valide{\r\n        background-color: #f1f8e9; \r\n      }\r\n      .input-invalide{\r\n        background-color: #ffebee;\r\n      }\r\n      /* Conteneur du dropdown */\r\n.dropdown {\r\n  position: relative;\r\n    display: inline-block;\r\n    /* width: 100%; */\r\n    border: 1px solid #eff3f8;\r\n    padding: 20px 10px;\r\n    border-radius: 3px;\r\n    background-color: #fafbfe;\r\n}\r\n\r\n/* Bouton du dropdown */\r\n.dropdown-toggle {\r\n      background-color: #fafbfe;\r\n  color: #a2adcd;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n}\r\n\r\n/* Liste cachée par défaut */\r\n.dropdown-menu {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f9f9f9;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\r\n  z-index: 1;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n}\r\n\r\n/* Eléments du dropdown */\r\n.dropdown-item {\r\n  padding: 12px 16px;\r\n  text-align: left;\r\n  color: black;\r\n  text-decoration: none;\r\n  display: block;\r\n  font-size: 14px;\r\n}\r\n\r\n/* Changer la couleur au survol */\r\n.dropdown-item:hover {\r\n  background-color: #f1f1f1;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Affichage du menu lorsque l'utilisateur clique sur le bouton */\r\n.dropdown:hover .dropdown-menu {\r\n  display: block;\r\n}\r\n\r\nsummary#dropdownButtonPrice {\r\n  color: #a2adcd;\r\n}\r\nsummary#dropdownButtonGenre {\r\n    color: #a2adcd;\r\n}\r\n\r\n\r\n    `\r\n  ],\r\n  shadowOptions: { mode: 'open' }\r\n})\r\nexport class Inscription extends WebComponent {\r\n  @state() valid: \"true\" | \"false\" | null = null;\r\n  @state() invalid: \"true\" | \"false\" | null = null;\r\n\r\n  @attr() isEmailValid:boolean = null;\r\n  @attr() isPasswordValid:boolean = null;\r\n  @attr() isStrongPassword:boolean = null;\r\n  @attr() isConfirmPasswordIsValid:boolean = null;\r\n\r\n\r\n  email: string = '';\r\n  password: string = '';\r\n  confPassword: string = '';\r\n  date: string = '';\r\n  firstName: string = '';\r\n  lastName: string = '';\r\n  genre: string = '';\r\n  tarif: string = '';\r\n\r\n  handleDropDownValueTarif(plan) {\r\n    // Sélectionner les éléments dans le Shadow DOM\r\n    const dropdownButton = this.shadowRoot?.getElementById('dropdownButtonPrice');\r\n    const dropdownMenu = this.shadowRoot?.getElementById('dropdownMenu');\r\n    \r\n    // Mettre à jour le texte du bouton avec la sélection\r\n    dropdownButton.textContent = `${plan.nom_plan} - ${plan.prix} €`;\r\n    this.tarif = plan.nom_plan;\r\n    console.log(this.tarif)\r\n    \r\n    // Vérifier si le menu est déjà ouvert ou non et ajuster son état\r\n    if (dropdownMenu.style.display === 'none' || dropdownMenu.style.display === '') {\r\n      // Ouvrir le menu si il est fermé (display: none ou initialement vide)\r\n      dropdownMenu.style.display = 'block';\r\n    } else {\r\n      // Fermer le menu si il est déjà ouvert\r\n      dropdownMenu.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  handleDropDownValueGenre(info) {\r\n    // Sélectionner les éléments dans le Shadow DOM\r\n    const dropdownButton = this.shadowRoot?.getElementById('dropdownButtonGenre');\r\n    const dropdownMenu = this.shadowRoot?.getElementById('dropdownMenu');\r\n    \r\n    // Mettre à jour le texte du bouton avec la sélection\r\n    dropdownButton.textContent = `${info.genre}`;\r\n    this.genre = info.genre;\r\n    console.log(this.genre)\r\n    \r\n    // Vérifier si le menu est déjà ouvert ou non et ajuster son état\r\n    if (dropdownMenu.style.display === 'none' || dropdownMenu.style.display === '') {\r\n      // Ouvrir le menu si il est fermé (display: none ou initialement vide)\r\n      dropdownMenu.style.display = 'block';\r\n    } else {\r\n      // Fermer le menu si il est déjà ouvert\r\n      dropdownMenu.style.display = 'none';\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n\r\n  async preloadData(url:string): Promise<any[]> {\r\n    console.log(url)\r\n    try {\r\n      // Faire la requête pour récupérer les plans tarifaires depuis l'URL\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      // Vérifier si la réponse est correcte\r\n      if (!response.ok) {\r\n        throw new Error('Erreur serveur lors de la récupération des plans tarifaires.');\r\n      }\r\n  \r\n      // Récupérer les données au format JSON\r\n      const data = await response.json();\r\n  \r\n      console.log(\"Plans tarifaires reçus:\", data);\r\n  \r\n      // Retourner les données reçues, ou un tableau vide si aucun élément\r\n      return data.length > 0 ? data : [];\r\n  \r\n    } catch (error) {\r\n      console.error('Erreur lors de la requête fetch:', error);\r\n      return [];\r\n    }\r\n  }\r\n  \r\n\r\n  handleEmailBlur() {\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const emailInput = inputs?.[0];\r\n    const email = emailInput.value || '';\r\n  \r\n    if (!email.includes('@')) {\r\n      console.log('L\\'email doit contenir le caractère \"@\"');\r\n      this.isEmailValid = false;\r\n    } else {\r\n      console.log('Email valide');\r\n      this.isEmailValid = true;\r\n      this.email = email;\r\n      console.log(this.email)\r\n    }\r\n  \r\n    //this.checkFormValidity();\r\n  }\r\n\r\n  handlePasswordBlur() {\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const passwordInput = inputs?.[1];\r\n    const password = passwordInput.value || '';\r\n\r\n    const errorMessage = this.CheckStrength(password);\r\n\r\n    if (errorMessage) {\r\n      console.log(errorMessage);\r\n      this.isPasswordValid = false;\r\n    } else {\r\n      console.log('Mot de passe valide');\r\n      this.isPasswordValid = true;\r\n      this.password = password;\r\n      console.log(this.password);\r\n    }\r\n}\r\n\r\n  CheckStrength(password: string): string | null {\r\n    const min = 6;\r\n    const max = 20;\r\n\r\n    if (password.length < min || password.length > max) {\r\n        return `Le mot de passe doit comporter entre ${min} et ${max} caractères.`;\r\n    }\r\n\r\n    const specialCharacters = /[!@#\\$%\\^\\&*\\)\\(+=._-]+/;\r\n    if (!specialCharacters.test(password)) {\r\n        return 'Le mot de passe doit contenir au moins un caractère spécial.';\r\n    }\r\n\r\n    const hasUpperCase = /[A-Z]/;\r\n    if (!hasUpperCase.test(password)) {\r\n        return 'Le mot de passe doit contenir au moins une majuscule.';\r\n    }\r\n\r\n    const hasNumber = /[0-9]/;\r\n    if (!hasNumber.test(password)) {\r\n        return 'Le mot de passe doit contenir au moins un chiffre.';\r\n    }\r\n\r\n    return null;\r\n  }\r\n  handleConfirmPasswordBlur() {\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const confirmPasswordInput = inputs?.[2];\r\n    const confPassword = confirmPasswordInput.value || '';\r\n\r\n    console.log(this.password, confPassword);\r\n\r\n    // Vérifie si les mots de passe sont égaux\r\n    if (confPassword !== this.password) {\r\n      console.log(\"Les mots de passe ne correspondent pas\");\r\n      this.isConfirmPasswordIsValid = false;\r\n    } else {\r\n      console.log('Les mots de passe correspondent');\r\n      this.isConfirmPasswordIsValid = true;\r\n      this.confPassword = confPassword;\r\n    }\r\n  }\r\n\r\n  handleDateBlur(){\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const dateInput = inputs?.[3];\r\n    const date = dateInput.value || '';\r\n\r\n    // Peut-être vérifié si le format est bien respecter //\r\n    this.date = date;\r\n  }\r\n  handleFirstNameBlur(){\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const firstNameInput = inputs?.[4];\r\n    const firstName = firstNameInput.value || '';\r\n\r\n    this.firstName = firstName;\r\n  }\r\n  handleLastNameBlur(){\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const lastNameInput = inputs?.[5];\r\n    const lastName = lastNameInput.value || '';\r\n\r\n    this.lastName = lastName;\r\n  }\r\n\r\n  checkValidity() {\r\n    const formData: { [key: string]: string } = {};\r\n  \r\n\r\n    if (this.email) {\r\n      formData.email = this.email;\r\n    } else {\r\n      console.log(\"L'email est manquant.\");\r\n      return null;\r\n    }\r\n  \r\n    if (this.password) {\r\n      formData.password = this.password;\r\n    } else {\r\n      console.log(\"Le mot de passe est manquant.\");\r\n      return null;\r\n    }\r\n  \r\n    if (this.date) {\r\n      formData.date = this.date;\r\n    } else {\r\n      console.log(\"La date est manquante.\");\r\n      return null;\r\n    }\r\n  \r\n    if (this.firstName) {\r\n      formData.firstName = this.firstName;\r\n    } else {\r\n      console.log(\"Le prénom est manquant.\");\r\n      return null;\r\n    }\r\n  \r\n    if (this.lastName) {\r\n      formData.lastName = this.lastName;\r\n    } else {\r\n      console.log(\"Le nom de famille est manquant.\");\r\n      return null;\r\n    }\r\n\r\n    if (this.tarif) {\r\n      formData.tarif = this.tarif;\r\n    } else {\r\n      console.log(\"Le choix d'abonnement manquant.\");\r\n      return null;\r\n    }\r\n\r\n    if (this.genre) {\r\n      formData.genre = this.genre;\r\n    } else {\r\n      console.log(\"Le sexe est manquant.\");\r\n      return null;\r\n    }\r\n  \r\n    console.log('Données du formulaire valides:', formData);\r\n    console.log(formData.genre, formData.tarif)\r\n    return formData;\r\n  }\r\n  \r\n  async sendData() {\r\n    const formData = this.checkValidity();\r\n  \r\n    if (!formData) {\r\n      console.log('Données invalides, la requête ne sera pas envoyée.');\r\n      return;\r\n    }\r\n  \r\n    console.log('Envoi des données:', formData);\r\n    try {\r\n      const response = await fetch(`${url}inscriptions`, {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(formData),  // Envoie des données JSON\r\n      });\r\n  \r\n      if (response.ok) {\r\n          const result = await response.text();\r\n          alert(\"Utilisateur enregistré avec succès !\");\r\n\r\n          window.location.href = '/pages/connexion';\r\n      } else {\r\n          console.error(\"Erreur lors de l'enregistrement :\", response.statusText);\r\n          alert(\"Une erreur s'est produite. Veuillez réessayer.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la requête :\", error);\r\n      alert(\"Impossible d'enregistrer la réservation.\");\r\n    }\r\n  }\r\n}","import './password';\r\n\r\nexport * from './password'","import { html , render , WebComponent , customElement , attr , attrState , state, css, ViewTemplate, ViewContext, asyncAppend, repeat, children } from '@lithium-framework/core';\r\nimport '@lithium-framework/router-element';\r\nimport 'unofficial-pf-v5-wc';\r\nimport 'unofficial-pf-v5-wc-icons';\r\nimport LoginPageStyle from '@patternfly/react-styles/css/components/Login/login';\r\nimport {url} from '../../../../url';\r\n\r\n@customElement({\r\n  name: 'page-new-password',\r\n  template: html`${(newpassword: NewPassword) => {\r\n    return html`\r\n      <div class=\"login\">\r\n        <div class=\"header\">\r\n          <h1>Change your password</h1>\r\n        </div>\r\n        <div class=\"main-body\">\r\n          <div class=\"input-field\">\r\n            <pf-icons-envelope></pf-icons-envelope>\r\n            <input \r\n              type=\"email\" \r\n              placeholder=\"Email\" \r\n              @input=\"${(login) => login.handleEmailInput()}\" \r\n              value=\"${newpassword.email}\"\r\n            >\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <pf-icons-lock></pf-icons-lock>\r\n            <input \r\n              type=\"password\" \r\n              placeholder=\"Password\" \r\n              @input=\"${(newpassword) => newpassword.handlePasswordInput()}\" \r\n              value=\"${newpassword.password}\"\r\n            >\r\n          </div>\r\n          <button \r\n            class=\"button-login\" \r\n            ?disabled=\"${!newpassword.isFormValid}\"\r\n            @click=\"${() => newpassword.handleLogin()}\"\r\n          >\r\n            Save changes\r\n          </button>\r\n        </div>\r\n        ${newpassword.errorMessage \r\n          ? html`<div class=\"error-message\">${newpassword.errorMessage}</div>` \r\n          : ''}\r\n      </div>\r\n    `;\r\n  }}`,\r\n  styles: [ \r\n    css`\r\n      .login{\r\n        width: 500px;\r\n        height: 500px;\r\n        background-color: #ffffff;\r\n        position: absolute;\r\n        top: 25%;\r\n        left: 15%;\r\n        color: black;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 7%;\r\n        border-radius: 5px;\r\n      }\r\n      .main-body {\r\n        display: grid;\r\n        gap: 5px;\r\n        width: 65%;\r\n      }\r\n      .input-field {\r\n        border: 1px solid #eff3f8;\r\n        padding: 10px 10px;\r\n        border-radius: 3px;\r\n        background-color: #fafbfe;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      input[type=\"email\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"email\"]::placeholder {\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"password\"]{\r\n        border: none;\r\n        background-color: #fafbfe;\r\n        width: 38ch;\r\n        padding: 10px 10px;\r\n      }\r\n      input[type=\"password\"]:placeholder{\r\n        color: #a2adbe;\r\n      }\r\n      input[type=\"radio\"] {\r\n        appearance: none;\r\n        width: 25px;\r\n        height: 25px;\r\n        border: 1px solid #eff3f8;\r\n        border-radius: 3px;\r\n        background-color: #fff;\r\n        cursor: pointer;\r\n        margin: 0;\r\n      }\r\n\r\n      input[type=\"radio\"]:checked {\r\n        background-color: #0066cc; \r\n        border: 1px solid #0066cc;\r\n      }\r\n      label{\r\n        color: #a2adbe;\r\n      }\r\n      .button-login {\r\n        background-color: #0066cc;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 15px 10px;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n        border: none;\r\n        font-size: 18px;\r\n        color: #ffffff;\r\n      }\r\n      .button-login:hover{\r\n        background-color: #004080;\r\n      }\r\n      .remember-password {\r\n        display: flex;\r\n        gap: 50px;\r\n      }\r\n      .radio {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px;\r\n      }\r\n      a{\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n      }\r\n    `\r\n  ],\r\n  shadowOptions: { mode: 'open' }\r\n})\r\nexport class NewPassword extends WebComponent {\r\n  \r\n\r\n  @state() email: string = '';\r\n  @state() password: string = '';\r\n  @state() rememberMe: boolean = false;\r\n  @state() isFormValid: boolean = false;\r\n  @state() errorMessage: string | null = null;\r\n\r\n  @state() isCustom: boolean = false;\r\n\r\n  Mail:string = '';\r\n  Password:string = '';\r\n\r\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\r\n    \r\n\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  handleEmailInput(login) {\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const emailValue = inputs?.[0].value || '';\r\n   \r\n    this.Mail = emailValue;\r\n    this.validateForm();\r\n  }\r\n\r\n  handlePasswordInput(login) {\r\n    const inputs = this.shadowRoot?.querySelectorAll('input');\r\n    const password = inputs?.[1].value || '';\r\n    console.log(password)\r\n\r\n    this.Password = password;\r\n    this.validateForm();\r\n  }\r\n\r\n  validateForm() {\r\n    console.log(this.Mail,this.Password)\r\n    this.isFormValid = this.Mail !== '' && this.Password !== '';\r\n    this.errorMessage = this.isFormValid ? null : 'Veuillez entrer à la fois un email et un mot de passe.';\r\n  }\r\n\r\n  async sendData() {\r\n    if (this.isFormValid) {\r\n      const data = {\r\n        email: this.Mail,\r\n        newpassword: this.Password,\r\n      };\r\n      console.log(data);\r\n  \r\n      try {\r\n        const response = await fetch(`${url}password`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data),\r\n        });\r\n  \r\n        // Vérification de la réponse HTTP\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          console.log(result);\r\n  \r\n          // Redirection vers la page des cours\r\n          window.location.href = '/pages/connexion';\r\n        } else {\r\n          // Gestion des erreurs de statut (par exemple, 401 Unauthorized)\r\n          console.error(\"Erreur lors de la connexion :\", response.statusText);\r\n          this.errorMessage = \"Échec de la connexion. Veuillez vérifier vos informations.\";\r\n        }\r\n  \r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la requête :\", error);\r\n        this.errorMessage = \"Une erreur est survenue. Veuillez réessayer plus tard.\";\r\n      }\r\n    } else {\r\n      this.errorMessage = 'Veuillez remplir tous les champs.';\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  // Gestion de la soumission du formulaire\r\n  handleLogin() {\r\n    this.validateForm();\r\n    if (this.isFormValid) {\r\n      this.sendData();\r\n    }\r\n  }\r\n\r\n  toggleRememberMe() {\r\n    this.rememberMe = !this.rememberMe;\r\n  }\r\n}","import './notification';\r\n\r\nexport * from './notification';","import { html , render , WebComponent , customElement , attr , attrState , state, css, ViewTemplate, ViewContext, asyncAppend, repeat, children } from '@lithium-framework/core';\r\nimport '@lithium-framework/router-element';\r\nimport 'unofficial-pf-v5-wc';\r\nimport 'unofficial-pf-v5-wc-icons';\r\n\r\n@customElement({\r\n  name: 'notification-box',\r\n  template: html`${(notification: Notification) => {\r\n    return html`\r\n      <div class=\"${[\r\n          'notification',\r\n          notification.isCustom ? '-custom' : '', \r\n          notification.isInfo ? '-info' : '', \r\n          notification.isSuccess ? '-success' : '', \r\n          notification.isWarning ? '-warning' : '', \r\n          notification.isDanger ? '-danger' : ''\r\n        ].join('')}\">\r\n        <div class=\"icon\">\r\n          ${notification.isCustom ? html`<pf-icons-bell></pf-icons-bell>` : ''}\r\n          ${notification.isInfo ? html`<pf-icons-info-circle></pf-icons-info-circle>` : ''}\r\n          ${notification.isSuccess ? html`<pf-icons-check-circle></pf-icons-check-circle>` : ''}\r\n          ${notification.isWarning ? html`<pf-icons-exclamation-triangle></pf-icons-exclamation-triangle>` : ''}\r\n          ${notification.isDanger ? html`<pf-icons-exclamation-circle></pf-icons-exclamation-circle>` : ''}\r\n        </div>\r\n        <div class=\"main-body\">\r\n          <div class=\"title\">\r\n            ${notification.isCustom ? html`<pf-icons-bell></pf-icons-bell>` : ''}\r\n            ${notification.isInfo ? html`<h3>Information</h3>` : ''}\r\n            ${notification.isSuccess ? html`<h3>Success</h3>` : ''}\r\n            ${notification.isWarning ? html`<h3>Warning</h3>` : ''}\r\n            ${notification.isDanger ? html`<h3>Danger</h3>` : ''}\r\n          </div>\r\n          <span class=\"custom-text\">\r\n            <slot></slot>\r\n          </span>\r\n        </div>\r\n        <div class=\"toggle-close\">\r\n          <pf-icons-times></pf-icons-times>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }}`,\r\n  styles: [\r\n    css`\r\n      .notification-success{\r\n        width: 300px;\r\n        background-color: #ffffff;\r\n        position: fixed;\r\n        top: 0;\r\n        right: 0;\r\n        margin-top: 10px;\r\n        margin-right: 10px;\r\n        padding: 10px 10px;\r\n        border-radius: 5px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        color: #3e8635;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n      }\r\n      .layer-success {\r\n        width: 5%;\r\n        background-color: #4CAF50;\r\n        border-radius: 3px;\r\n      }\r\n      .main-body{\r\n        display: inline-flex;\r\n        align-items: center;\r\n        gap: 20px;\r\n      }\r\n      .toggle-close{\r\n        color: #9E9E9E;\r\n        cursor: pointer;\r\n      }\r\n      .icon {\r\n        transform: translateY(2px);\r\n      }\r\n    `\r\n  ],\r\n  shadowOptions: { mode: 'open' }\r\n})\r\n\r\nexport class Notification extends WebComponent {\r\n\r\n  @attr() custom: \"true\" | \"false\" | null = null;\r\n  @attr() info: \"true\" | \"false\" | null = null;\r\n  @attr() success: \"true\" | \"false\" | null = null;\r\n  @attr() warning: \"true\" | \"false\" | null = null;\r\n  @attr() danger: \"true\" | \"false\" | null = null;\r\n\r\n  @state() isCustom: boolean = false;\r\n  @state() isInfo: boolean = false;\r\n  @state() isSuccess: boolean = false;\r\n  @state() isWarning: boolean = false;\r\n  @state() isDanger: boolean = false;\r\n\r\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\r\n    if (name === \"custom\") {\r\n      this.isCustom = newValue === \"true\";\r\n    }\r\n    if (name === \"info\") {\r\n      this.isInfo = newValue === \"true\";\r\n    }\r\n    if (name === \"success\") {\r\n      this.isSuccess = newValue === \"true\";\r\n    }\r\n    if (name === \"warning\") {\r\n      this.isWarning = newValue === \"true\";\r\n    }\r\n    if (name === \"danger\") {\r\n      this.isDanger = newValue === \"true\";\r\n    }\r\n\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n}\r\n\r\n","import './navigation';\r\n\r\nexport * from './navigation';","import { html , render , WebComponent , customElement , attr , attrState , state, css, ViewTemplate, ViewContext, asyncAppend, repeat, children } from '@lithium-framework/core';\r\nimport '@lithium-framework/router-element';\r\nimport 'unofficial-pf-v5-wc';\r\nimport 'unofficial-pf-v5-wc-icons';\r\n\r\n@customElement({\r\n  name: 'navigation-panel',\r\n  template: html`${(navigation: Navigation) => {\r\n    return html`\r\n    <div class=\"navigation\">\r\n      <div class=\"navigation-list\">\r\n        <div class=\"list\"></div>\r\n          <div class=\"item\"><a href=\"/pages/cours\">cours</a></div>\r\n          <div class=\"item\"><a href=\"/pages/informations\">infos</a></div>\r\n          <div class=\"item\"><a href=\"/pages/compte\">compte</a></div>\r\n          <div class=\"item\"><a href=\"/pages/profile\">profile</a></div>\r\n            ${navigation.isAdmin === true ? html`<div class=\"item\"><a href=\"/pages/dashboard\">dashboard</a></div>` : html``}\r\n          </div>\r\n          <div class=\"bottom-navigation\">\r\n            <pf-button @click=\"${() => navigation.logout()}\">Déconnexion</pf-button>\r\n          </div>\r\n      </div>\r\n    </div>`;\r\n  }}`,\r\n  styles : [\r\n    css`\r\n    .navigation{\r\n        color: black;\r\n        background-color: #ffffff;\r\n        justify-content: space-between;\r\n        flex-direction: column;\r\n        display: flex;\r\n      }\r\n      .navigation-list{\r\n        color: black;\r\n        background-color: #ffffff;\r\n        justify-content: space-between;\r\n        flex-direction: column;\r\n      }\r\n      .list{\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 10px;\r\n      }\r\n      .item{\r\n        list-style: none;\r\n        padding: 10px 10px;\r\n        transition: 0.3s;\r\n        cursor: pointer\r\n      }\r\n      .item:hover{\r\n        background-color: lightgray\r\n      }\r\n      a{\r\n        color: black;\r\n        text-decoration: none;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class Navigation extends WebComponent{\r\n  @state() isAdmin: boolean = null;\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.getRole();\r\n  }\r\n  getRole() {\r\n    const userDataString = localStorage.getItem('userData');\r\n    if (!userDataString) {\r\n      throw new Error('Utilisateur non connecté. Aucune donnée dans localStorage.');\r\n    }\r\n\r\n    const userData = JSON.parse(userDataString);\r\n    console.log('Données utilisateur récupérées:', userData);\r\n\r\n    // Récupérer le rôle de l'utilisateur\r\n    const userRole = userData.role;\r\n    console.log('Rôle de l\\'utilisateur:', userRole);\r\n\r\n    // Vérifier si le rôle est 'administrator' ou 'super-administrator' et mettre à jour isAdmin\r\n    if (userRole === 'administrator' || userRole === 'super-administrator') {\r\n      this.isAdmin = true;\r\n    } else {\r\n      this.isAdmin = false;\r\n    }\r\n\r\n    console.log('Est-ce un administrateur ? ', this.isAdmin);\r\n  }\r\n  logout() {\r\n    localStorage.clear();\r\n    window.location.href = 'http://ec2-18-185-136-232.eu-central-1.compute.amazonaws.com:3000/';\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n}"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$7WQrb","$5D1XK","$keLaC","$63c0eb825134691e$export$21a94553ffa41578","WebComponent","attributeChangedCallback","name","oldValue","newValue","handleEmailInput","login","inputs","shadowRoot","querySelectorAll","emailValue","value","Mail","validateForm","handlePasswordInput","password","console","log","Password","isFormValid","errorMessage","sendData","data","email","response","fetch","url","method","headers","credentials","body","JSON","stringify","ok","result","json","userData","last_name","nom","first_name","prenom","role","isloged","localStorage","setItem","alert","setTimeout","window","location","href","token","error","statusText","handleLogin","toggleRememberMe","rememberMe","constructor","args","isCustom","__decorate","state","prototype","customElement","template","html","styles","css","shadowOptions","mode","$b21273fa9e92feae$export$6bc58b28a578cd46","handleDropDownValueTarif","plan","dropdownButton","getElementById","dropdownMenu","textContent","nom_plan","prix","tarif","style","display","handleDropDownValueGenre","info","genre","preloadData","length","handleEmailBlur","emailInput","includes","isEmailValid","handlePasswordBlur","passwordInput","CheckStrength","isPasswordValid","specialCharacters","test","hasUpperCase","hasNumber","handleConfirmPasswordBlur","confPassword","confirmPasswordInput","isConfirmPasswordIsValid","handleDateBlur","date","dateInput","handleFirstNameBlur","firstName","firstNameInput","handleLastNameBlur","lastName","lastNameInput","checkValidity","formData","text","valid","invalid","isStrongPassword","attr","inscription","join","asyncAppend","repeat","$4f10e442f1ac4c0e$export$804dab9fa8278df0","newpassword","$c309728b190c0262$export$14834abbfce3b8cd","isInfo","isSuccess","isWarning","isDanger","custom","success","warning","danger","notification","$ea05b25bc099d7ba$export$b8a61e5c71402559","connectedCallback","getRole","userDataString","getItem","parse","userRole","isAdmin","logout","clear","navigation"],"version":3,"file":"index.7ce64bad.js.map"}