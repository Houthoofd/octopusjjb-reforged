{"mappings":"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","sources":["<anon>","ui/src/pages/informations/index.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirec605\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirec605\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $7WQrb = parcelRequire(\"7WQrb\");\n\nvar $5D1XK = parcelRequire(\"5D1XK\");\nparcelRequire(\"RKbfs\");\nparcelRequire(\"3I5Zu\");\nparcelRequire(\"dLLJA\");\nparcelRequire(\"7KTRf\");\n\nvar $keLaC = parcelRequire(\"keLaC\");\nclass $4a5c5aae63afe723$export$6aa3cb2a9adc9f0d extends (0, $5D1XK.WebComponent) {\n    connectedCallback() {\n        super.connectedCallback();\n        this.getRole();\n    }\n    checkUserConnection() {\n        const userDataString = localStorage.getItem(\"userData\");\n        if (!userDataString) {\n            // Si l'utilisateur n'est pas connecté, redirige vers la page de connexion\n            window.location.href = \"/pages/connexion\";\n            return false; // Retourne false pour indiquer qu'aucun utilisateur n'est connecté\n        }\n        return true; // Si l'utilisateur est connecté, retourne true\n    }\n    // Méthode pour récupérer le rôle et affecter isAdmin\n    getRole() {\n        // Vérifie d'abord si l'utilisateur est connecté\n        if (!this.checkUserConnection()) return; // Si l'utilisateur n'est pas connecté, on arrête l'exécution\n        const userDataString = localStorage.getItem(\"userData\");\n        const userData = JSON.parse(userDataString);\n        console.log(\"Donn\\xe9es utilisateur r\\xe9cup\\xe9r\\xe9es:\", userData);\n        // Récupère le rôle de l'utilisateur\n        const userRole = userData.role;\n        console.log(\"R\\xf4le de l'utilisateur:\", userRole);\n        // Vérifie si l'utilisateur a un rôle administrateur et met à jour isAdmin\n        if (userRole === \"administrator\" || userRole === \"super-administrator\") {\n            this.isUser = false;\n            this.isAdmin = true;\n        } else {\n            this.isUser = true;\n            this.isAdmin = false;\n        }\n        console.log(\"Est-ce un administrateur ? \", this.isAdmin);\n    }\n    async preloadData() {\n        try {\n            const userDataString = localStorage.getItem(\"userData\");\n            if (!userDataString) throw new Error(\"Utilisateur non connect\\xe9. Aucune donn\\xe9e dans localStorage.\");\n            const userData = JSON.parse(userDataString);\n            console.log(\"Donn\\xe9es utilisateur r\\xe9cup\\xe9r\\xe9es:\", userData);\n            const response = await fetch(`${(0, $keLaC.url)}compte/`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(userData)\n            });\n            if (!response.ok) throw new Error(\"Erreur serveur.\");\n            const data = await response.json();\n            // Enveloppe l'objet dans un tableau\n            const dataArray = [\n                data\n            ]; // Si `data` est un objet, on le met directement dans un tableau\n            console.log(\"Donn\\xe9es mises dans un tableau:\", dataArray, dataArray.length);\n            return dataArray.length > 0 ? dataArray : []; // Retourne le tableau, ou un tableau vide si aucun élément\n        } catch (error) {\n            console.error(\"Erreur lors de la requ\\xeate fetch:\", error);\n            return [];\n        }\n    }\n    formatDateFromISO(isoDateString) {\n        const date = new Date(isoDateString);\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        return `${year}-${month}-${day}`;\n    }\n    convertToISODate(dateString) {\n        const [year, month, day] = dateString.split(\"-\");\n        return new Date(`${year}-${month}-${day}T00:00:00Z`).toISOString();\n    }\n    constructor(...args){\n        super(...args);\n        this.data = [];\n        this.isUser = null;\n        this.isAdmin = null;\n    }\n}\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $4a5c5aae63afe723$export$6aa3cb2a9adc9f0d.prototype, \"isUser\", void 0);\n(0, $7WQrb.__decorate)([\n    (0, $5D1XK.state)()\n], $4a5c5aae63afe723$export$6aa3cb2a9adc9f0d.prototype, \"isAdmin\", void 0);\n$4a5c5aae63afe723$export$6aa3cb2a9adc9f0d = (0, $7WQrb.__decorate)([\n    (0, $5D1XK.customElement)({\n        name: \"page-informations\",\n        template: (0, $5D1XK.html)`${(informations)=>{\n            return (0, $5D1XK.html)`\r\n      <pf-page masterhead-no-icon masterhead-no-branding drawer-inline drawer-expanded drawer-static drawer-panel-left>\r\n          <div slot = \"drawer-panel\">\r\n            <navigation-panel></navigation-panel>\r\n          </div>\r\n          <pf-panel header scrollable>\r\n            <div slot=\"header\">\r\n              <h1 class=\"title\">Informations</h1>\r\n            </div>\r\n            <div class=\"table-infos\">\r\n              ${(0, $5D1XK.asyncAppend)(informations.preloadData(), (result)=>{\n                return (0, $5D1XK.html)`${(0, $5D1XK.repeat)(result, (0, $5D1XK.html)`${(info)=>{\n                    console.log(info);\n                    return (0, $5D1XK.html)`\r\n                          <div class=\"row\">\r\n                            <div class=\"type-de-cours\">${informations.formatDateFromISO(info.created_at)}</div>\r\n                            <div class=\"heure-debut\">${info.email}</div>\r\n                            <div class=\"heure-fin\">${info.first_name}</div>\r\n                            <div class=\"type-de-cours\">${info.gender}</div>\r\n                            <div class=\"heure-debut\">${info.grade}</div>\r\n                            <div class=\"heure-fin\">${info.last_name}</div>\r\n                            <div class=\"heure-fin\">${info.role}</div>\r\n                          </div>`;\n                }}`)}`;\n            })}\r\n            </div>\r\n          </pf-panel>\r\n        <pf-avatar></pf-avatar>\r\n      </pf-page>`;\n        }}`,\n        styles: [\n            (0, $5D1XK.css)`\r\n      .table-infos {\r\n        color: black;\r\n      }\r\n      .navigation{\r\n        color: black\r\n      }\r\n      .title{\r\n        color: black;\r\n      }\r\n    `\n        ]\n    })\n], $4a5c5aae63afe723$export$6aa3cb2a9adc9f0d);\nlet $4a5c5aae63afe723$var$template = (0, $5D1XK.html)`${(context)=>{\n    return (0, $5D1XK.html)`<page-informations></page-informations>`;\n}}`;\n(0, $5D1XK.render)($4a5c5aae63afe723$var$template);\n\n\n//# sourceMappingURL=index.b31d09ac.js.map\n","import { html , render , WebComponent , customElement , attr , attrState , state, css, ViewTemplate, ViewContext, asyncAppend, repeat, children } from '@lithium-framework/core';\r\nimport '@lithium-framework/router-element';\r\nimport 'unofficial-pf-v5-wc';\r\nimport 'unofficial-pf-v5-wc-icons';\r\nimport '../../components';\r\nimport {url} from '../../../../url';\r\n\r\n@customElement({\r\n  name: 'page-informations',\r\n  template: html`${(informations: Informations) => {\r\n    return html`\r\n      <pf-page masterhead-no-icon masterhead-no-branding drawer-inline drawer-expanded drawer-static drawer-panel-left>\r\n          <div slot = \"drawer-panel\">\r\n            <navigation-panel></navigation-panel>\r\n          </div>\r\n          <pf-panel header scrollable>\r\n            <div slot=\"header\">\r\n              <h1 class=\"title\">Informations</h1>\r\n            </div>\r\n            <div class=\"table-infos\">\r\n              ${asyncAppend(informations.preloadData(), (result) => {\r\n                  return html`${\r\n                    repeat(\r\n                      result,\r\n                      html`${(info) => {\r\n                        console.log(info)\r\n                        return html`\r\n                          <div class=\"row\">\r\n                            <div class=\"type-de-cours\">${informations.formatDateFromISO(info.created_at)}</div>\r\n                            <div class=\"heure-debut\">${info.email}</div>\r\n                            <div class=\"heure-fin\">${info.first_name}</div>\r\n                            <div class=\"type-de-cours\">${info.gender}</div>\r\n                            <div class=\"heure-debut\">${info.grade}</div>\r\n                            <div class=\"heure-fin\">${info.last_name}</div>\r\n                            <div class=\"heure-fin\">${info.role}</div>\r\n                          </div>`;\r\n                      }}`\r\n                    )\r\n                  }`\r\n                })\r\n              }\r\n            </div>\r\n          </pf-panel>\r\n        <pf-avatar></pf-avatar>\r\n      </pf-page>`;\r\n  }}`,\r\n  styles : [\r\n    css`\r\n      .table-infos {\r\n        color: black;\r\n      }\r\n      .navigation{\r\n        color: black\r\n      }\r\n      .title{\r\n        color: black;\r\n      }\r\n    `\r\n  ]\r\n})\r\n\r\nexport class Informations extends WebComponent {\r\n  data: any[] = [];\r\n\r\n  @state() isUser: boolean = null;\r\n  @state() isAdmin: boolean = null;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.getRole();\r\n  }\r\n\r\n  checkUserConnection() {\r\n    const userDataString = localStorage.getItem('userData');\r\n    if (!userDataString) {\r\n        // Si l'utilisateur n'est pas connecté, redirige vers la page de connexion\r\n        window.location.href = '/pages/connexion';\r\n        return false; // Retourne false pour indiquer qu'aucun utilisateur n'est connecté\r\n    }\r\n    return true; // Si l'utilisateur est connecté, retourne true\r\n  }\r\n\r\n  // Méthode pour récupérer le rôle et affecter isAdmin\r\n  getRole() {\r\n    // Vérifie d'abord si l'utilisateur est connecté\r\n    if (!this.checkUserConnection()) {\r\n        return; // Si l'utilisateur n'est pas connecté, on arrête l'exécution\r\n    }\r\n\r\n    const userDataString = localStorage.getItem('userData');\r\n    const userData = JSON.parse(userDataString);\r\n    console.log('Données utilisateur récupérées:', userData);\r\n\r\n    // Récupère le rôle de l'utilisateur\r\n    const userRole = userData.role;\r\n    console.log('Rôle de l\\'utilisateur:', userRole);\r\n\r\n    // Vérifie si l'utilisateur a un rôle administrateur et met à jour isAdmin\r\n    if (userRole === 'administrator' || userRole === 'super-administrator') {\r\n        this.isUser = false;\r\n        this.isAdmin = true;\r\n    } else {\r\n        this.isUser = true;\r\n        this.isAdmin = false;\r\n    }\r\n\r\n    console.log('Est-ce un administrateur ? ', this.isAdmin);\r\n  }\r\n\r\n\r\n  async preloadData(): Promise<any[]> {\r\n    try {\r\n      const userDataString = localStorage.getItem('userData');\r\n      if (!userDataString) {\r\n        throw new Error('Utilisateur non connecté. Aucune donnée dans localStorage.');\r\n      }\r\n  \r\n      const userData = JSON.parse(userDataString);\r\n      console.log('Données utilisateur récupérées:', userData);\r\n  \r\n      const response = await fetch(`${url}compte/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Erreur serveur.');\r\n      }\r\n  \r\n      const data = await response.json();\r\n  \r\n      // Enveloppe l'objet dans un tableau\r\n      const dataArray = [data]; // Si `data` est un objet, on le met directement dans un tableau\r\n  \r\n      console.log('Données mises dans un tableau:', dataArray, dataArray.length);\r\n  \r\n      return dataArray.length > 0 ? dataArray : []; // Retourne le tableau, ou un tableau vide si aucun élément\r\n    } catch (error) {\r\n      console.error('Erreur lors de la requête fetch:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  formatDateFromISO(isoDateString: string): string {\r\n    const date = new Date(isoDateString);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  convertToISODate(dateString: string): string {\r\n    const [year, month, day] = dateString.split('-');\r\n    return new Date(`${year}-${month}-${day}T00:00:00Z`).toISOString();\r\n  }\r\n  \r\n}\r\n\r\nlet template: ViewTemplate<any> = html`${( context:ViewContext )=>{\r\n\r\n\r\n  return html`<page-informations></page-informations>`;\r\n\r\n}}`\r\n\r\nrender(template);"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7WQrb","$5D1XK","$keLaC","$4a5c5aae63afe723$export$6aa3cb2a9adc9f0d","WebComponent","connectedCallback","getRole","checkUserConnection","localStorage","getItem","window","location","href","userData","JSON","parse","console","log","userRole","role","isUser","isAdmin","preloadData","userDataString","response","fetch","url","method","headers","body","stringify","ok","dataArray","json","length","error","formatDateFromISO","isoDateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","convertToISODate","dateString","split","toISOString","constructor","args","data","__decorate","state","prototype","customElement","name","template","html","informations","asyncAppend","result","repeat","info","created_at","email","first_name","gender","grade","last_name","styles","css","$4a5c5aae63afe723$var$template","context","render"],"version":3,"file":"index.b31d09ac.js.map"}